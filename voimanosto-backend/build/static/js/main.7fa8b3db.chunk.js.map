{"version":3,"sources":["styles/logo.svg","context/userContext.ts","services/loginService.ts","components/LoginForm/index.tsx","components/LoginForm/LoginForm.tsx","services/bodyweightService.ts","animations/LoadingLottie.tsx","components/Bodyweight/Form/PlainForm/index.tsx","components/Bodyweight/Form/PlainForm/BodyweightPlainForm.tsx","components/Bodyweight/Table/index.tsx","components/Bodyweight/Table/BodyweightTable.tsx","components/Bodyweight/Chart/index.tsx","components/Bodyweight/Chart/BodyweightChart.tsx","components/Bodyweight/index.tsx","components/Bodyweight/Bodyweight.tsx","services/competitionService.ts","components/Competition/Chart/index.tsx","components/Competition/Chart/CompetitionChart.tsx","util.ts","components/Competition/Form/PlainForm/CompetitionPlainForm.tsx","components/Competition/Form/PlainForm/index.tsx","components/Competition/Form/index.tsx","components/Competition/Form/CompetitionForm.tsx","components/Competition/index.tsx","components/Competition/Competition.tsx","components/PointCalculator/index.tsx","components/PointCalculator/PointCalculator.tsx","services/prService.ts","components/PRTable/TableByName/index.tsx","components/PRTable/TableByName/TableByName.tsx","components/PRTable/TableByType/index.tsx","components/PRTable/TableByType/TableByType.tsx","components/PRTable/index.tsx","components/PRTable/PRTable.tsx","services/metricsService.ts","components/VolumeCharts/Piechart/VolumePiechart.tsx","components/VolumeCharts/Piechart/index.tsx","components/Bodyweight/Form/index.tsx","components/Bodyweight/Form/BodyweightForm.tsx","services/exerciseLibraryService.ts","services/workoutService.ts","components/Workouts/Form/PlainForm/index.tsx","components/Workouts/Form/PlainForm/WorkoutPlainForm.tsx","components/Workouts/Form/index.tsx","components/Workouts/Form/WorkoutForm.tsx","views/Calendar/index.tsx","views/Calendar/CustomCalendar.tsx","components/Workouts/Workout/index.tsx","components/Workouts/Workout/Workout.tsx","components/Workouts/index.tsx","components/Workouts/WorkoutWeek.tsx","views/Dashboard/index.tsx","views/Dashboard/Dashboard.tsx","animations/SuccessLottie.tsx","components/NewExerciseForm/index.tsx","components/NewExerciseForm/NewExerciseForm.tsx","components/ExerciseLibrary/index.tsx","components/ExerciseLibrary/ExerciseLibrary.tsx","components/Notification/index.tsx","components/Notification/Notification.tsx","components/NotificationGroup/index.tsx","components/NotificationGroup/NotificationGroup.tsx","views/Profile/index.tsx","views/Profile/Profile.tsx","views/Settings/index.tsx","views/Settings/Settings.tsx","views/Tools/index.tsx","views/Tools/Tools.tsx","services/registrationService.ts","components/RegistrationForm/index.tsx","components/RegistrationForm/RegistrationForm.tsx","components/Router/index.tsx","components/Router/Router.tsx","components/MainContent/index.tsx","components/MainContent/MainContent.tsx","components/SideBar/index.tsx","components/SideBar/SideBar.tsx","components/TopMenu/index.tsx","components/TopMenu/TopMenu.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","UserContext","createContext","user","name","username","avatar","email","token","loggedIn","setUser","loginService","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","res","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","verify","_ref2","_callee2","_context2","baseUrl","_x2","LoginForm","password","errorMessage","handleLogin","setUsername","setPassword","react_default","createElement","Header","inverted","as","Message","negative","Segment","placeholder","style","backgroundColor","Grid","columns","relaxed","stackable","Column","Form","onSubmit","Input","icon","iconPosition","label","value","onChange","target","type","_ref3","Button","content","primary","verticalAlign","NavLink","to","size","Divider","vertical","bodyweightService","addBw","props","config","result","headers","Authorization","concat","getBw","get","deleteBw","_callee3","_context3","delete","id","_x3","editBw","_ref4","_callee4","_context4","put","_x4","getMonth","_ref5","_callee5","_context5","date","_x5","LoadingLottie","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","dist_default","options","height","width","BodyweightPlainForm","setBodyweight","addBodyweight","btnText","setOpen","step","min","Number","Group","color","onClick","BodyweightTable","setData","useContext","_useState","useState","_useState2","slicedToArray","formOpen","setFormOpen","_useState3","_useState4","bwFormOpen","setBwFormOpen","_useState5","_useState6","bodyweight","_useState7","_useState8","indexOpen","setIndexOpen","_useState9","_useState10","confirmDeleteBw","setConfirmDeleteBw","handleBodyweightDelete","filter","bw","handleBodyweightEdit","newData","map","objectSpread","Table","unstackable","collapsing","selectable","Row","HeaderCell","Body","i","Popup","flowing","border","open","basic","position","key","floated","onClose","on","trigger","PlainForm","Icon","textAlign","Modal","centered","className","Content","moment","format","widths","Cell","BodyweightChart","marginTop","es6","margin","top","right","left","bottom","dataKey","tickFormatter","tick","stroke","offset","fill","angle","fillOpacity","labelFormatter","strokeDasharray","opacity","Bodyweight","dataLoaded","setDataLoaded","showTable","setShowTable","settingsIndex","setSettingsIndex","useEffect","fetchData","Accordion","Title","active","index","event","Checkbox","toggle","checked","Chart","Bodyweight_Table","animations_LoadingLottie","competitionService","getCompsByType","addComp","CompetitionChart","results","row","yAxisId","domain","orientation","length","payload","borderRadius","squat","bench","deadlift","ipf","wilks","undefined","formatter","entry","toUpperCase","barSize","stackId","ipf_params","M","Raw","SBD","S","B","D","Single-Ply","F","wilks_params","calculatePoints","total","sex","equipment","eventType","alert","constants","points","Math","log","round","calculateWilks","pow","CompetitionPlainForm","setType","setName","venue","setVenue","setBw","sq","setSq","_useState11","_useState12","bp","setBp","_useState13","_useState14","dl","setDl","handleSubmit","Dropdown","text","clearable","selection","e","error","CompetitionForm","TransitionablePortal","Form_PlainForm","Competition","Competition_Chart","Competition_Form","Date","PointCalculator","setPoints","setWilks","setTotal","setSex","setEquipment","setEventType","handleBodyweightChange","preventDefault","handleSexChange","handleEquipmentChange","handleEventChange","Container","divided","Statistic","Value","inline","Field","Radio","control","animated","visible","hidden","prService","getAll","current","getOne","variation","TableByName","reps","Array","from","x","singleLine","rep","exercise","indexOf","weight","TableByType","_id","charAt","slice","PRTable","tabIndices","Tab","menu","compact","pointing","defaultActiveIndex","panes","menuItem","onTabChange","newType","newName","activeIndex","Pane","PRTable_TableByType","PRTable_TableByName","groupedArray","forEach","some","item","oldEntry","pop","newEntry","push","groupData","metricsService","getAllVolume","COLORS","VolumePiechart","activeIndexVol","setActiveIndexVol","activeIndexNL","setActiveIndexNL","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","d","r","toFixed","display","flexWrap","activeShape","onMouseEnter","onTouchStart","BodyweightForm","zIndex","exerciseLibraryService","getExercises","baseURL","postExercise","getByDate","create","workoutService","WorkoutPlainForm","exName","setExName","exVariations","setExVariations","exVariation","setExVariation","pr","setPr","added","setAdded","sets","setSets","setReps","_useState15","_useState16","intensity","setIntensity","_useState17","_useState18","RPE","setRPE","_useState19","_useState20","rating","setRating","variations","_pr","console","notes","readiness","exercises","Select","Label","set","addedCopy","toConsumableArray","oldSet","ceil","newSet","TextArea","Rating","maxRating","onRate","WorkoutForm","Workouts_Form_PlainForm","CustomCalendar","portalOpen","setPortalOpen","bwPortalOpen","setBwPortalOpen","workoutPortalOpen","setWorkoutPortalOpen","compPortalOpen","setCompPortalOpen","popupTopPos","setPopupTopPos","popupLeftPos","setPopupLeftPos","toDate","selectedDay","setSelectedDay","startOf","startOfMonth","setStartOfMonth","workouts","setWorkouts","bodyweights","setBodyweights","_useState21","_useState22","competitions","setCompetitions","_useState23","_useState24","_useState25","_useState26","msg","setMsg","bws","comps","getTime","comp","document","classList","add","test","getElementsByClassName","childNodes","appendChild","dateObj","setTimeout","fluid","header","success","entry_default","minDetail","monthStart","btn","monthBox","btnPos","getBoundingClientRect","boxPos","tileContent","arr","includes","onActiveDateChange","activeStartDate","maxWidth","maxHeight","Bodyweight_Form","Workouts_Form","Workout","activeExerciseIndex","setActiveExerciseIndex","setExercises","groupedExercises","isPR","styled","exclusive","WorkoutWeek","startDate","currentWeek","weekStart","Workouts_Workout","Dashboard","setChecked","setStartDate","showCalendar","setShowCalendar","marginRight","marginLeft","onClickDay","Workouts","SuccessLottie","NewExerciseForm","isOpen","closePortal","inputName","setInputName","customNames","setCustomNames","setVariation","dimmed","setDimmed","errMsg","setErrMsg","handleTypeChange","names","mapped","Promise","resolve","Transition","animation","duration","Dimmer","Dimmable","closeIcon","dimmer","currentTarget","animations_SuccessLottie","ExerciseLibrary","exerciseType","setExerciseType","exerciseName","setExerciseName","Set","celled","Footer","components_NewExerciseForm","Notification","message","iconName","unmountOnHide","transitionOnMount","NotificationGroup","notifications","children","setChildren","el","components_Notification","UserProfile","setNotifications","doubling","Card","Image","src","corner","Meta","Description","extra","Piechart","components_ExerciseLibrary","components_NotificationGroup","UserSettings","_useContext","file","setFile","handleFileUpload","selectedFile","formData","FormData","append","onUploadProgress","progressEvent","loaded","then","newUser","handleFileChange","files","htmlFor","Tools","registrationService","register","RegistrationForm","setEmail","confirmPassword","setConfirmPassword","setErrorMessage","successMessage","setSuccessMessage","nameError","setNameError","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","t0","response","positive","onBlur","validEmail","EmailValidator","validate","_ref6","Router","redirectURL","history","useReactRouter","react_router","path","component","exact","VolumePieChart","render","react_router_dom","MainContent","isMobile","window","localStorage","setItem","components_Router","components_LoginForm","assign","SideBar","Menu","borderless","fixed","Item","disabled","TopMenu","logo","removeItem","location","reload","App","useMemo","setIsMobile","updateDimensions","innerWidth","pathname","verifyUser","loggedUserToken","_user","getItem","navigator","userAgent","body","zoom","addEventListener","Provider","components_TopMenu","components_SideBar","components_MainContent","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.7fa8b3db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e9432fe.svg\";","import { createContext } from 'react'\n\nexport const UserContext = createContext({\n  user: {\n    name: '',\n    username: '',\n    avatar: '',\n    email: '',\n    token: '',\n    loggedIn: false\n  },\n  setUser: (user: IUser) => {}\n})\n","import axios from 'axios'\nconst baseUrl: string = '/api/login'\n\ninterface loginProps {\n  username: string\n  password: string\n}\n\nconst login = async (credentials: loginProps) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nconst verify = async (token: string) => {\n  const res = await axios.post(baseUrl + '/verify', { token: token })\n  return res.data\n}\n\nexport default { login, verify }\n","import LoginForm from './LoginForm'\nexport default LoginForm\n","import React from 'react'\nimport {\n  Segment,\n  Grid,\n  Form,\n  Button,\n  Divider,\n  Message,\n  Header\n} from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\nimport { ILoginProps } from '../../types'\n\nconst LoginForm: React.FC<ILoginProps> = ({\n  username,\n  password,\n  errorMessage,\n  handleLogin,\n  setUsername,\n  setPassword\n}) => {\n  return (\n    <div>\n      <Header inverted as='h2'>\n        Login\n      </Header>\n      {errorMessage !== null ? (\n        <Message negative>\n          <Message.Header>Something went wrong</Message.Header>\n          <p>{errorMessage}</p>\n        </Message>\n      ) : (\n        <div> </div>\n      )}\n      <Segment inverted placeholder style={{ backgroundColor: '#222' }}>\n        <Grid columns={2} relaxed='very' stackable>\n          <Grid.Column>\n            <Form inverted onSubmit={handleLogin}>\n              <Form.Input\n                icon='user'\n                iconPosition='left'\n                label='Username'\n                placeholder='Username'\n                value={username}\n                onChange={({ target }) => setUsername(target.value)}\n              />\n              <Form.Input\n                icon='lock'\n                iconPosition='left'\n                label='Password'\n                type='password'\n                value={password}\n                onChange={({ target }) => setPassword(target.value)}\n              />\n\n              <Button inverted content='Login' primary />\n            </Form>\n          </Grid.Column>\n\n          <Grid.Column verticalAlign='middle'>\n            <Button\n              inverted\n              as={NavLink}\n              to='/register'\n              content='Sign up'\n              icon='signup'\n              size='big'\n            />\n          </Grid.Column>\n        </Grid>\n\n        <Divider inverted vertical>\n          Or\n        </Divider>\n      </Segment>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import axios from 'axios'\n\ninterface addBwProps {\n  date: Date\n  bodyweight: number\n  username: string\n  token: string\n}\n\nconst addBw = async (props: addBwProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const result = await axios.post(\n    `/api/users/${props.username}/bodyweight`,\n    props,\n    config\n  )\n  return result.data\n}\n\ninterface getBwProps {\n  username: string\n  token: string\n}\n\nconst getBw = async (props: getBwProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const result = await axios.get(\n    `/api/users/${props.username}/bodyweight`,\n    config\n  )\n  return result.data\n}\n\ninterface deleteBwProps {\n  username: string\n  token: string\n  id: string\n}\n\nconst deleteBw = async (props: deleteBwProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.delete(\n    `/api/users/${props.username}/bodyweight/${props.id}`,\n    config\n  )\n  return res\n}\n\ninterface editBwProps {\n  username: string\n  token: string\n  bodyweight: number\n  date: Date\n  id: string\n}\n\nconst editBw = async (props: editBwProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.put(\n    `/api/users/${props.username}/bodyweight/${props.id}`,\n    props,\n    config\n  )\n  return res.data\n}\n\ninterface getMonthProps {\n  username: string\n  token: string\n  date: Date\n}\n\nconst getMonth = async (props: getMonthProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(\n    `/api/users/${props.username}/bodyweight/${props.date}/month`,\n    config\n  )\n  return res.data\n}\n\nexport default { addBw, getBw, deleteBw, editBw, getMonth }\n","import React from 'react'\nimport Lottie from 'react-lottie'\nimport animationData from './loadingLottie.json'\n\nconst LoadingLottie: React.FC = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n  return <Lottie options={defaultOptions} height={150} width={150} />\n}\n\nexport default LoadingLottie\n","import BodyweightPlainForm from './BodyweightPlainForm'\nexport default BodyweightPlainForm\n","import React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\n\ninterface BodyweightPlainFormProps {\n  setBodyweight(value: number): void\n  addBodyweight(): void\n  btnText: string\n  setOpen(value: boolean): void\n}\n\nconst BodyweightPlainForm: React.FC<BodyweightPlainFormProps> = ({\n  setBodyweight,\n  addBodyweight,\n  btnText,\n  setOpen\n}) => {\n  return (\n    <Form>\n      <Form.Input\n        placeholder='Bodyweight'\n        type='number'\n        step='0.01'\n        min='0'\n        onChange={({ target }) => setBodyweight(Number(target.value))}\n      />\n      <Button.Group>\n        <Button inverted color='green' type='submit' onClick={addBodyweight}>\n          {btnText} bodyiweght\n        </Button>\n        <Button inverted color='red' onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n      </Button.Group>\n    </Form>\n  )\n}\n\nexport default BodyweightPlainForm\n","import BodyweightTable from './BodyweightTable'\nexport default BodyweightTable\n","import moment from 'moment'\nimport React, { useContext, useState } from 'react'\nimport { Button, Header, Icon, Modal, Popup, Table } from 'semantic-ui-react'\nimport { UserContext } from '../../../context/userContext'\nimport bodyweightService from '../../../services/bodyweightService'\nimport BodyweightPlainForm from '../Form/PlainForm'\n\nconst BodyweightTable: React.FC<IBodyweightTableProps> = ({\n  data,\n  setData\n}) => {\n  const { user } = useContext(UserContext)\n  const [formOpen, setFormOpen] = useState(false)\n  const [bwFormOpen, setBwFormOpen] = useState(false)\n  const [bodyweight, setBodyweight] = useState(0)\n  const [indexOpen, setIndexOpen] = useState(-1)\n  const [confirmDeleteBw, setConfirmDeleteBw] = useState(false)\n\n  const handleBodyweightDelete = async (id: string) => {\n    await bodyweightService.deleteBw({\n      username: user.username,\n      token: user.token,\n      id: id\n    })\n    setData(data.filter(bw => bw.id !== id))\n    setConfirmDeleteBw(false)\n    setFormOpen(false)\n  }\n\n  const handleBodyweightEdit = async (bw: IBodyweight) => {\n    const result = await bodyweightService.editBw({\n      date: bw.date,\n      id: bw.id,\n      bodyweight: bodyweight,\n      username: user.username,\n      token: user.token\n    })\n    const newData = data.map(bw => {\n      if (bw.id === result.id) {\n        return { ...bw, bodyweight: result.bodyweight }\n      } else return bw\n    })\n    setData(newData)\n    setBodyweight(0)\n    setBwFormOpen(false)\n    setFormOpen(false)\n  }\n\n  return (\n    <div>\n      <Table unstackable inverted collapsing selectable columns={2}>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>Bodyweight</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {data.map((bw, i) => (\n            <Popup\n              flowing\n              inverted\n              style={{ border: '1px solid white' }}\n              open={formOpen && i === indexOpen}\n              basic\n              position='right center'\n              size='large'\n              key={bw.id}\n              content={\n                <div>\n                  <Button.Group inverted floated='left'>\n                    <Popup\n                      open={bwFormOpen}\n                      onClose={() => setBwFormOpen(false)}\n                      inverted\n                      on='click'\n                      position='bottom right'\n                      trigger={\n                        <Button\n                          basic\n                          color='orange'\n                          onClick={() => setBwFormOpen(true)}\n                        >\n                          Edit\n                        </Button>\n                      }\n                      content={\n                        <BodyweightPlainForm\n                          setBodyweight={setBodyweight}\n                          addBodyweight={() => handleBodyweightEdit(bw)}\n                          btnText='Edit'\n                          setOpen={setBwFormOpen}\n                        />\n                      }\n                    />\n                    <Button\n                      basic\n                      color='purple'\n                      onClick={() => {\n                        setConfirmDeleteBw(true)\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </Button.Group>\n                  <Icon\n                    style={{ textAlign: 'right', verticalAlign: 'top' }}\n                    name='close'\n                    onClick={() => {\n                      setFormOpen(false)\n                      setConfirmDeleteBw(false)\n                    }}\n                  />\n                  <Modal\n                    centered={false}\n                    className='inverted'\n                    open={confirmDeleteBw}\n                  >\n                    <Header icon='exclamation' content='Confirm delete' />\n                    <Modal.Content>\n                      <p>\n                        Are you sure you want to delete {bw.bodyweight} kg\n                        reading on {moment(bw.date).format('MMMM DD, YYYY')}{' '}\n                        from your records?\n                      </p>\n                      <Button.Group inverted widths='4' floated='left'>\n                        <Button\n                          color='green'\n                          basic\n                          onClick={() => setConfirmDeleteBw(false)}\n                        >\n                          No, don't delete\n                        </Button>\n                        <Button\n                          color='red'\n                          basic\n                          onClick={() => handleBodyweightDelete(bw.id)}\n                        >\n                          Yes, I'm sure\n                        </Button>\n                      </Button.Group>\n                    </Modal.Content>\n                  </Modal>\n                </div>\n              }\n              on='click'\n              trigger={\n                <Table.Row\n                  onClick={() => {\n                    setFormOpen(!formOpen)\n                    setIndexOpen(i)\n                  }}\n                >\n                  <Table.Cell>\n                    {moment(bw.date).format('MMMM DD, YYYY')}\n                  </Table.Cell>\n                  <Table.Cell>{bw.bodyweight} kg</Table.Cell>\n                </Table.Row>\n              }\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n\nexport default BodyweightTable\n","import BodyweightChart from './BodyweightChart'\nexport default BodyweightChart\n","import React from 'react'\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  XAxis,\n  YAxis,\n  Area,\n  Tooltip,\n  CartesianGrid,\n  Label as ChartLabel\n} from 'recharts'\nimport moment from 'moment'\n\nconst BodyweightChart: React.FC<IBodyweightProps> = ({ data }) => {\n  return (\n    <div style={{ marginTop: 20 }}>\n      <ResponsiveContainer height={300} width='100%'>\n        <AreaChart\n          data={data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 20 }}\n        >\n          <XAxis\n            dataKey='date'\n            tickFormatter={tick => moment(tick).format('MMM DD')}\n            stroke='white'\n          >\n            <ChartLabel\n              value='Date'\n              position='insideBottom'\n              offset={-10}\n              fill='white'\n            />\n          </XAxis>\n          <YAxis\n            stroke='white'\n            label={{\n              value: 'Bodyweight, kg',\n              angle: -90,\n              fill: 'white',\n              position: 'insideLeft'\n            }}\n          />\n          <Area\n            type='monotone'\n            dataKey='bodyweight'\n            stroke='#8884d8'\n            fill='#8884d8'\n            fillOpacity={0.7}\n          />\n          <Tooltip\n            labelFormatter={value => 'Date: ' + moment(value).format('MMM DD')}\n          />\n          <CartesianGrid strokeDasharray='3 3' opacity={0.3} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default BodyweightChart\n","import Bodyweight from './Bodyweight'\nexport default Bodyweight\n","import React, { useContext, useState, useEffect } from 'react'\nimport { UserContext } from '../../context/userContext'\nimport { Header, Checkbox, Accordion, Icon } from 'semantic-ui-react'\nimport bodyweightService from '../../services/bodyweightService'\nimport LoadingLottie from '../../animations/LoadingLottie'\nimport BodyweightTable from './Table'\nimport BodyweightChart from './Chart'\n\nconst Bodyweight: React.FC = () => {\n  const { user } = useContext(UserContext)\n  const [data, setData] = useState<IBodyweight[]>([])\n  const [dataLoaded, setDataLoaded] = useState(false)\n  const [showTable, setShowTable] = useState(false)\n  const [settingsIndex, setSettingsIndex] = useState(-1)\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await bodyweightService.getBw({\n          username: user.username,\n          token: user.token\n        })\n\n        setData(res)\n        setDataLoaded(true)\n      }\n    }\n    fetchData()\n  }, [user])\n\n  const handleSettingsClick = (\n    event: React.SyntheticEvent<HTMLElement>,\n    props: any\n  ) => {\n    const { index } = props\n    const newIndex = settingsIndex === index ? -1 : index\n    setSettingsIndex(newIndex)\n  }\n\n  return (\n    <div>\n      <Header inverted as='h2'>\n        {user.name}'s bodyweight\n      </Header>\n      <Accordion inverted>\n        <Accordion.Title\n          active={settingsIndex === 0}\n          index={0}\n          onClick={handleSettingsClick}\n        >\n          <Icon inverted name='cog' /> Settings\n        </Accordion.Title>\n        <Accordion.Content active={settingsIndex === 0}>\n          <Checkbox\n            toggle\n            label='Show table'\n            className='inverted'\n            checked={showTable}\n            onChange={() => setShowTable(!showTable)}\n          />\n        </Accordion.Content>\n      </Accordion>\n\n      {dataLoaded ? (\n        <div>\n          <BodyweightChart data={data} />\n          {showTable ? (\n            <BodyweightTable data={data} setData={setData} />\n          ) : (\n            <div />\n          )}\n        </div>\n      ) : (\n        <div>\n          <LoadingLottie />\n          <Header as='h2' inverted>\n            Loading data...\n          </Header>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default Bodyweight\n","import axios from 'axios'\n\ninterface getCompetitionProps {\n  username: String\n  token: String\n  type: String\n}\n\nconst getCompsByType = async (props: getCompetitionProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const result = await axios.get(\n    `/api/users/${props.username}/competitions/${props.type}`,\n    config\n  )\n\n  return result.data\n}\n\ninterface addCompProps {\n  username: String\n  token: String\n  date: Date\n  type: String\n  name: String\n  venue: String\n  squat: Number\n  bench: Number\n  deadlift: Number\n  ipf: Number\n  wilks: Number\n  bodyweight: Number\n}\n\nconst addComp = async (props: addCompProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.post(\n    `/api/users/${props.username}/competitions`,\n    props,\n    config\n  )\n  return res.data\n}\n\ninterface getMonthProps {\n  username: string\n  token: string\n  date: Date\n}\n\nconst getMonth = async (props: getMonthProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(\n    `/api/users/${props.username}/competitions/${props.date}/month`,\n    config\n  )\n  return res.data\n}\n\nexport default { getCompsByType, addComp, getMonth }\n","import CompetitionChart from './CompetitionChart'\nexport default CompetitionChart\n","import moment from 'moment'\nimport React from 'react'\nimport {\n  Bar,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts'\n\ninterface CompetitionChartProps {\n  data: ICompetition[]\n}\n\nconst CompetitionChart: React.FC<CompetitionChartProps> = ({ data }) => {\n  const results = data.map(row => ({\n    ...row.result,\n    bodyweight: row.bodyweight,\n    date: row.date\n  }))\n\n  const formatTooltip = (data: any): React.ReactElement | null => {\n    if (data.active) {\n      const value = data.payload[0].payload\n      return (\n        <div\n          className='custom-tooltip'\n          style={{\n            backgroundColor: 'white',\n            borderRadius: '5px',\n            opacity: 0.8\n          }}\n        >\n          <p className='label'>{`Date : ${moment(value.date).format(\n            'MMM DD, YY'\n          )}`}</p>\n          <p style={{ color: data.payload[0].color }}>{`Squat: ${\n            value.squat\n          } kg`}</p>\n          <p style={{ color: data.payload[1].color }}>{`Bench: ${\n            value.bench\n          } kg`}</p>\n          <p style={{ color: data.payload[2].color }}>{`Deadlift: ${\n            value.deadlift\n          } kg`}</p>\n          <p style={{ color: '#ff453a' }}>\n            Total: {value.squat + value.bench + value.deadlift} kg\n          </p>\n          <p style={{ color: '#32d74b' }}>{`Bodyweight: ${\n            value.bodyweight\n          } kg`}</p>\n          <p style={{ color: '#bf5af2' }}>{`IPF Points: ${value.ipf}`}</p>\n          <p style={{ color: '#bf5af2' }}>{`Wilks: ${value.wilks} points`}</p>\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <ResponsiveContainer height={500} width='100%'>\n      <ComposedChart data={results}>\n        <CartesianGrid stroke='#f5f5f5' opacity={0.3} />\n        <XAxis\n          dataKey='date'\n          tickFormatter={tick => moment(tick).format('MMM DD, YY')}\n          label={{\n            value: 'Competition',\n            position: 'insideBottomRight',\n            offset: 0,\n            fill: 'white'\n          }}\n          stroke='white'\n        />\n        <YAxis\n          yAxisId='left'\n          label={{\n            value: 'Total',\n            angle: -90,\n            position: 'insideLeft',\n            fill: 'white'\n          }}\n          stroke='white'\n          type='number'\n          domain={[0, 700]}\n        />\n        <YAxis\n          yAxisId='right'\n          orientation='right'\n          label={{\n            value: 'IPF Points',\n            angle: -90,\n            position: 'insideRight',\n            fill: 'white'\n          }}\n          stroke='white'\n          type='number'\n          domain={[300, 800]}\n        />\n        <Tooltip content={data.length > 0 ? formatTooltip : undefined} />\n        <Legend\n          formatter={(value, entry) => (\n            <span style={{ color: 'white' }}>{value.toUpperCase()}</span>\n          )}\n        />\n\n        <Bar\n          yAxisId='left'\n          dataKey='squat'\n          barSize={20}\n          fill='#ff375f'\n          stackId='a'\n        />\n        <Bar\n          yAxisId='left'\n          dataKey='bench'\n          barSize={20}\n          fill='#ff9f0a'\n          stackId='a'\n        />\n        <Bar\n          yAxisId='left'\n          dataKey='deadlift'\n          barSize={20}\n          fill='#5e5ce6'\n          stackId='a'\n        />\n        <Line yAxisId='right' type='linear' dataKey='ipf' stroke='white' />\n      </ComposedChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default CompetitionChart\n","interface EventType {\n  [key: string]: number[]\n}\n\ninterface EquipmentType {\n  [key: string]: EventType\n}\n\ninterface SexType {\n  [key: string]: EquipmentType\n}\n\nconst ipf_params: SexType = {\n  M: {\n    Raw: {\n      SBD: [310.67, 857.785, 53.216, 147.0835],\n      S: [123.1, 363.085, 25.1667, 75.4311],\n      B: [86.4745, 259.155, 17.57845, 53.122],\n      D: [103.5355, 244.765, 15.3714, 31.5022]\n    },\n    'Single-Ply': {\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\n      S: [150.485, 446.445, 36.5155, 103.7061],\n      B: [133.94, 441.465, 35.3938, 113.0057],\n      D: [110.135, 263.66, 14.996, 23.011]\n    }\n  },\n  F: {\n    Raw: {\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\n      S: [50.479, 105.632, 19.1846, 56.2215],\n      B: [25.0485, 43.848, 6.7172, 13.952],\n      D: [47.136, 67.349, 9.1555, 13.67]\n    },\n    'Single-Ply': {\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\n      S: [74.6855, 171.585, 21.9475, 52.2948],\n      B: [49.106, 124.209, 23.199, 67.4926],\n      D: [51.002, 69.8265, 8.5802, 5.7258]\n    }\n  }\n}\n\ninterface Wilks {\n  [key: string]: number[]\n}\nconst wilks_params: Wilks = {\n  M: [\n    -216.0475144,\n    16.2606339,\n    -0.002388645,\n    -0.00113732,\n    7.01863e-6,\n    -1.291e-8\n  ],\n  F: [\n    594.31747775582,\n    -27.23842536447,\n    0.82112226871,\n    -0.00930733913,\n    4.731582e-5,\n    -9.054e-8\n  ]\n}\n\nexport function calculatePoints(\n  total: number,\n  bw: number,\n  sex: string,\n  equipment: string,\n  eventType: string\n): number {\n  if (bw === 0) alert('Please enter bodyweight')\n  if (total === 0) alert('Please enter total')\n  let constants = ipf_params[sex][equipment][eventType]\n  let points =\n    500 +\n    (100 * (total - (constants[0] * Math.log(bw) - constants[1]))) /\n      (constants[2] * Math.log(bw) - constants[3])\n  return Math.round(points * 100) / 100\n}\n\nexport function calculateWilks(total: number, bw: number, sex: string): number {\n  let constants = wilks_params[sex]\n  let wilks =\n    (total * 500) /\n    (constants[0] +\n      constants[1] * bw +\n      constants[2] * Math.pow(bw, 2) +\n      constants[3] * Math.pow(bw, 3) +\n      constants[4] * Math.pow(bw, 4) +\n      constants[5] * Math.pow(bw, 5))\n  return Math.round(wilks * 100) / 100\n}\n","import React, { useContext, useState } from 'react'\nimport { Dropdown, Form } from 'semantic-ui-react'\nimport { UserContext } from '../../../../context/userContext'\nimport competitionService from '../../../../services/competitionService'\nimport { calculatePoints, calculateWilks } from '../../../../util'\ninterface CompetitionPlainFormProps {\n  date: Date\n  setOpen(value: boolean): void\n}\n\nconst CompetitionPlainForm: React.FC<CompetitionPlainFormProps> = ({\n  setOpen,\n  date\n}) => {\n  const compTypes = [\n    { key: 'pl', value: 'pl', text: 'Powerlifting' },\n    { key: 'pushpull', value: 'pushpull', text: 'Push-pull' },\n    { key: 'bp', value: 'bp', text: 'Bench-only' },\n    { key: 'dl', value: 'dl', text: 'Deadlift-only' },\n    { key: 'sotilas', value: 'sotilas', text: 'Sotilaspenkki' }\n  ]\n  const { user } = useContext(UserContext)\n  const [type, setType] = useState('pl')\n  const [name, setName] = useState('')\n  const [venue, setVenue] = useState('')\n  const [bw, setBw] = useState(-1)\n  const [sq, setSq] = useState(-1)\n  const [bp, setBp] = useState(-1)\n  const [dl, setDl] = useState(-1)\n\n  const handleSubmit = async () => {\n    const ipf = calculatePoints(sq + bp + dl, bw, 'M', 'Raw', 'SBD')\n    const wilks = calculateWilks(sq + bp + dl, bw, 'M')\n    await competitionService.addComp({\n      username: user.username,\n      token: user.token,\n      name: name,\n      venue: venue,\n      bodyweight: bw,\n      squat: sq,\n      bench: bp,\n      deadlift: dl,\n      date: date,\n      type: type,\n      wilks: wilks,\n      ipf: ipf\n    })\n\n    setOpen(false)\n  }\n\n  const handleTypeSelect = (e: any, data: any) => {\n    setType(data.value)\n  }\n\n  return (\n    <div>\n      <Form inverted>\n        <Dropdown\n          options={compTypes}\n          className='inverted'\n          clearable\n          selection\n          placeholder='Competition type'\n          value={type}\n          onChange={handleTypeSelect}\n        />\n        <Form.Input\n          placeholder='Competition Name'\n          type='text'\n          value={name}\n          onChange={(e, data) => setName(data.value)}\n        />\n        <Form.Input\n          placeholder='Venue'\n          type='text'\n          value={venue}\n          onChange={(e, data) => setVenue(data.value)}\n        />\n        <Form.Input\n          placeholder='Bodyweight'\n          type='number'\n          step='0.01'\n          value={bw === -1 ? '' : bw}\n          onChange={(e, data) => setBw(Number(data.value))}\n          error={\n            bw >= 45\n              ? false\n              : bw === -1\n              ? false\n              : { content: 'Minimum value is 45 kg' }\n          }\n        />\n        <Form.Input\n          placeholder='Squat'\n          type='number'\n          step='2.5'\n          min='25'\n          value={sq === -1 ? '' : sq}\n          onChange={(e, data) => setSq(Number(data.value))}\n          error={\n            sq >= 25\n              ? false\n              : sq === -1\n              ? false\n              : { content: 'Minimum value is 25 kg' }\n          }\n        />\n        <Form.Input\n          placeholder='Bench'\n          type='number'\n          step='2.5'\n          min='25'\n          value={bp === -1 ? '' : bp}\n          onChange={(e, data) => setBp(Number(data.value))}\n          error={\n            bp >= 25\n              ? false\n              : bp === -1\n              ? false\n              : { content: 'Minimum value is 25 kg' }\n          }\n        />\n        <Form.Input\n          error={\n            dl >= 25\n              ? false\n              : dl === -1\n              ? false\n              : { content: 'Minimum value is 25 kg' }\n          }\n          placeholder='Deadlift'\n          type='number'\n          step='2.5'\n          min='25'\n          value={dl === -1 ? '' : dl}\n          onChange={(e, data) => setDl(Number(data.value))}\n        />\n        <Form.Group>\n          <Form.Button inverted color='green' onClick={handleSubmit}>\n            Add competition\n          </Form.Button>\n          <Form.Button inverted color='red' onClick={() => setOpen(false)}>\n            Cancel\n          </Form.Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default CompetitionPlainForm\n","import CompetitionPlainForm from './CompetitionPlainForm'\nexport default CompetitionPlainForm\n","import CompetitionForm from './CompetitionForm'\nexport default CompetitionForm\n","import React from 'react'\nimport { Modal, TransitionablePortal } from 'semantic-ui-react'\nimport CompetitionPlainForm from './PlainForm'\n\ninterface CompetitionFormProps {\n  open: boolean\n  setOpen(value: boolean): void\n  date: Date\n}\n\nconst CompetitionForm: React.FC<CompetitionFormProps> = ({\n  open,\n  setOpen,\n  date\n}) => {\n  return (\n    <TransitionablePortal open={open}>\n      <Modal open={true} className='inverted' centered={false}>\n        <Modal.Header>Add competition</Modal.Header>\n        <Modal.Content>\n          <CompetitionPlainForm setOpen={setOpen} date={date} />\n        </Modal.Content>\n      </Modal>\n    </TransitionablePortal>\n  )\n}\n\nexport default CompetitionForm\n","import Competition from './Competition'\nexport default Competition\n","import React, { useEffect, useContext, useState } from 'react'\nimport { UserContext } from '../../context/userContext'\nimport competitionService from '../../services/competitionService'\nimport LoadingLottie from '../../animations/LoadingLottie'\nimport CompetitionChart from './Chart'\nimport CompetitionForm from './Form/'\n\nconst Competition: React.FC = () => {\n  const [data, setData] = useState<ICompetition[]>([])\n  const [dataLoaded, setDataLoaded] = useState(false)\n  const [open, setOpen] = useState(false)\n  const { user } = useContext(UserContext)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        setDataLoaded(false)\n        const res = await competitionService.getCompsByType({\n          username: user.username,\n          token: user.token,\n          type: 'pl'\n        })\n        setData(res)\n        setDataLoaded(true)\n      }\n    }\n    fetchData()\n  }, [user])\n  return (\n    <div>\n      {dataLoaded ? <CompetitionChart data={data} /> : <LoadingLottie />}\n      {/* <button onClick={() => setOpen(!open)}>open portal</button> */}\n      <CompetitionForm open={open} setOpen={setOpen} date={new Date()} />\n    </div>\n  )\n}\n\nexport default Competition\n","import PointCalculator from './PointCalculator'\nexport default PointCalculator\n","import React, { useState } from 'react'\nimport { calculatePoints, calculateWilks } from '../../util'\nimport {\n  Button,\n  Icon,\n  Form,\n  Statistic,\n  Container,\n  Header,\n  Grid\n} from 'semantic-ui-react'\nimport './PointCalculator.scss'\n\nconst PointCalculator: React.FC = () => {\n  const [points, setPoints] = useState(0)\n  const [wilks, setWilks] = useState(0)\n  const [total, setTotal] = useState(0)\n  const [bodyweight, setBodyweight] = useState(0)\n  const [sex, setSex] = useState('M')\n  const [equipment, setEquipment] = useState('Raw')\n  const [eventType, setEventType] = useState('SBD')\n\n  const handleBodyweightChange = (event: any) => {\n    event.preventDefault()\n    setBodyweight(event.target.value)\n  }\n\n  const handleTotalChange = (event: any) => {\n    event.preventDefault()\n    setTotal(event.target.value)\n  }\n\n  const handleSexChange = (event: React.FormEvent<EventTarget>): void => {\n    let target = event.target as HTMLInputElement\n    setSex(target.value)\n  }\n\n  const handleEquipmentChange = (event: any) => {\n    setEquipment(event.target.value)\n  }\n\n  const handleEventChange = (event: any) => {\n    setEventType(event.target.value)\n  }\n\n  const handlePointChange = (event: any) => {\n    event.preventDefault()\n    setPoints(calculatePoints(total, bodyweight, sex, equipment, eventType))\n    setWilks(calculateWilks(total, bodyweight, sex))\n  }\n\n  return (\n    <Container text className='calculator-form'>\n      <Grid divided>\n        <Grid.Row>\n          <Statistic.Group inverted size='small'>\n            <Statistic inverted key='ipf_points'>\n              <Statistic.Value>\n                IPF points: {points === 0 ? '' : points}\n              </Statistic.Value>\n            </Statistic>\n            <Statistic key='wilks_points'>\n              <Statistic.Value>\n                Wilks points: {wilks === 0 ? '' : wilks}\n              </Statistic.Value>\n            </Statistic>\n          </Statistic.Group>\n        </Grid.Row>\n        <Grid.Row>\n          <Form inverted size='large' onSubmit={handleBodyweightChange}>\n            <Grid.Row divided>\n              <Form.Group inline={true}>\n                <Grid.Column>\n                  <Form.Field>\n                    <Header inverted>Bodyweight</Header>\n                    <Form.Input\n                      value={bodyweight === 0 ? '' : bodyweight}\n                      onChange={handleBodyweightChange}\n                      placeholder='Bodyweight'\n                      type='number'\n                    />\n                  </Form.Field>\n                </Grid.Column>\n                <Grid.Column>\n                  <Form.Field>\n                    <Header inverted>Total</Header>\n                    <Form.Input\n                      value={total === 0 ? '' : total}\n                      onChange={handleTotalChange}\n                      placeholder='Total'\n                      type='number'\n                    />\n                  </Form.Field>\n                </Grid.Column>\n              </Form.Group>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Form.Group>\n                <Header inverted>Sex </Header>\n                <Form.Radio\n                  control='input'\n                  type='radio'\n                  label='Male'\n                  value='M'\n                  checked={sex === 'M'}\n                  onChange={handleSexChange}\n                />\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Female'\n                  value='F'\n                  checked={sex === 'F'}\n                  onChange={handleSexChange}\n                />\n              </Form.Group>\n            </Grid.Row>\n            <Grid.Row>\n              <Form.Group>\n                <Header inverted>Event type</Header>\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Full competition'\n                  value='SBD'\n                  checked={eventType === 'SBD'}\n                  onChange={handleEventChange}\n                />\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Squat'\n                  value='S'\n                  checked={eventType === 'S'}\n                  onChange={handleEventChange}\n                />\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Bench press'\n                  value='B'\n                  checked={eventType === 'B'}\n                  onChange={handleEventChange}\n                />\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Deadlift'\n                  value='D'\n                  checked={eventType === 'D'}\n                  onChange={handleEventChange}\n                />\n              </Form.Group>\n            </Grid.Row>\n            <Grid.Row>\n              <Form.Group>\n                <Header inverted>Equipment</Header>\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Raw'\n                  value='Raw'\n                  checked={equipment === 'Raw'}\n                  onChange={handleEquipmentChange}\n                />\n                <Form.Field\n                  control='input'\n                  type='radio'\n                  label='Single-Ply'\n                  value='Single-Ply'\n                  checked={equipment === 'Single-Ply'}\n                  onChange={handleEquipmentChange}\n                />\n              </Form.Group>\n            </Grid.Row>\n            <Button\n              inverted\n              color='violet'\n              animated\n              onClick={handlePointChange}\n            >\n              <Button.Content visible>Calculate</Button.Content>\n              <Button.Content hidden>\n                <Icon name='calculator' />\n              </Button.Content>\n            </Button>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default PointCalculator\n","import axios from 'axios'\n\ninterface getPRProps {\n  username: string\n  token: string\n  type?: string\n  name?: string\n  current: string\n}\n\nconst getAll = async (props: getPRProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  let result\n  if (props.type) {\n    if (props.name) {\n      result = await axios.get(\n        `/api/users/${props.username}/prs/${props.type}/${props.name}/${\n          props.current\n        }`,\n        config\n      )\n    } else {\n      result = await axios.get(\n        `/api/users/${props.username}/prs/${props.type}/${props.current}`,\n        config\n      )\n    }\n  } else {\n    result = await await axios.get(\n      `/api/users/${props.username}/prs/${props.current}`,\n      config\n    )\n  }\n  return result.data\n}\n\ninterface getOnePRProps {\n  username: string\n  token: string\n  type: string\n  name: string\n  variation: string\n  current: string\n}\n\nconst getOne = async (props: getOnePRProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(\n    `/api/users/${props.username}/prs/${props.type}/${props.name}/${\n      props.variation\n    }/${props.current}`,\n    config\n  )\n  return res.data\n}\n\nexport default { getAll, getOne }\n","import TableByName from './TableByName'\nexport default TableByName\n","import React from 'react'\nimport { Table } from 'semantic-ui-react'\n\ninterface TableProps {\n  data: {\n    date: Date\n    exercise: IExercise\n    reps: number[]\n    weight: number[]\n  }[]\n}\n\nconst TableByName: React.FC<TableProps> = ({ data }) => {\n  const reps = Array.from({ length: 10 }, (x, i) => i + 1)\n  return (\n    <Table inverted selectable collapsing singleLine unstackable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Variation</Table.HeaderCell>\n          {reps.map(rep => (\n            <Table.HeaderCell key={rep}>{rep}</Table.HeaderCell>\n          ))}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {data.map(row => {\n          return (\n            <Table.Row key={row.exercise.variation}>\n              <Table.Cell> {row.exercise.variation}</Table.Cell>\n              {reps.map(rep => {\n                let index = row.reps.indexOf(rep)\n                if (index !== -1) {\n                  return <Table.Cell key={rep}>{row.weight[index]}</Table.Cell>\n                } else return <Table.Cell key={rep}>-</Table.Cell>\n              })}\n            </Table.Row>\n          )\n        })}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default TableByName\n","import TableByType from './TableByType'\nexport default TableByType\n","import React from 'react'\nimport { Table } from 'semantic-ui-react'\n\ninterface TableProps {\n  data: IPR[]\n}\n\nconst TableByType: React.FC<TableProps> = ({ data }) => {\n  return (\n    <Table inverted selectable collapsing singleLine unstackable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Type</Table.HeaderCell>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Variation</Table.HeaderCell>\n          <Table.HeaderCell>Reps</Table.HeaderCell>\n          <Table.HeaderCell>Weight</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {data.map(row => (\n          <Table.Row key={row._id}>\n            <Table.Cell> {row.exercise.type.toUpperCase()}</Table.Cell>\n            <Table.Cell>\n              {' '}\n              {row.exercise.name.charAt(0).toUpperCase() +\n                row.exercise.name.slice(1)}\n            </Table.Cell>\n            <Table.Cell> {row.exercise.variation}</Table.Cell>\n            <Table.Cell> {row.reps}</Table.Cell>\n            <Table.Cell> {row.weight}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default TableByType\n","import PRTable from './PRTable'\nexport default PRTable\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Header, Tab } from 'semantic-ui-react'\nimport LoadingLottie from '../../animations/LoadingLottie'\nimport { UserContext } from '../../context/userContext'\nimport prService from '../../services/prService'\nimport TableByName from './TableByName'\nimport TableByType from './TableByType'\n\nconst PRTable: React.FC = () => {\n  const { user } = useContext(UserContext)\n  const [data, setData] = useState<IPR[]>([])\n  const [type, setType] = useState('')\n  const [name, setName] = useState('')\n  const [dataLoaded, setDataLoaded] = useState(false)\n\n  const tabIndices = {\n    0: '',\n    1: 'Squat',\n    2: 'Bench',\n    3: 'Deadlift',\n    4: 'acc'\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setDataLoaded(false)\n      const res = await prService.getAll({\n        username: user.username,\n        token: user.token,\n        type: type,\n        name: name,\n        current: 'current'\n      })\n      setData(res)\n      setDataLoaded(true)\n    }\n    fetchData()\n  }, [user, type, name])\n\n  const groupData = (data: IPR[]) => {\n    interface groupArrayProps {\n      date: Date\n      exercise: IExercise\n      reps: number[]\n      weight: number[]\n    }\n    let groupedArray: groupArrayProps[] = []\n    data.forEach((entry, i) => {\n      if (\n        !groupedArray.some(\n          (item: any) => item.exercise.variation === entry.exercise.variation\n        )\n      ) {\n        let newEntry = {\n          date: entry.date,\n          exercise: entry.exercise,\n          reps: [entry.reps],\n          weight: [entry.weight]\n        }\n        groupedArray.push(newEntry)\n      } else {\n        let oldEntry = groupedArray.pop()\n        let newEntry = {\n          date: entry.date,\n          exercise: entry.exercise,\n          reps: oldEntry ? oldEntry.reps.concat(entry.reps) : [],\n          weight: oldEntry ? oldEntry.weight.concat(entry.weight) : []\n        }\n        groupedArray.push(newEntry)\n      }\n    })\n    return groupedArray\n  }\n\n  const handleTabChange = (e: any, data: any) => {\n    const i = data.activeIndex\n    let newType = '',\n      newName = ''\n    switch (i) {\n      case 0:\n        newType = ''\n        newName = ''\n        break\n      case 1:\n        newType = 'sbd'\n        newName = tabIndices[1]\n        break\n      case 2:\n        newType = 'sbd'\n        newName = tabIndices[2]\n        break\n      case 3:\n        newType = 'sbd'\n        newName = tabIndices[3]\n        break\n      case 4:\n        newType = 'sbd'\n        newName = ''\n        break\n      case 5:\n        newType = 'acc'\n        newName = ''\n        break\n    }\n    setType(newType)\n    setName(newName)\n  }\n  return (\n    <div>\n      <Header inverted as='h1'>\n        PERSONAL RECORD TABLE\n      </Header>\n      <Tab\n        menu={{ color: 'grey', inverted: true, compact: true, pointing: true }}\n        defaultActiveIndex={0}\n        className='inverted'\n        panes={[\n          { menuItem: 'All' },\n          { menuItem: 'Squat' },\n          { menuItem: 'Bench' },\n          { menuItem: 'Deadlift' },\n          { menuItem: 'SBD' },\n          { menuItem: 'Accessories' }\n        ]}\n        onTabChange={handleTabChange}\n      >\n        <Tab.Pane>SBD</Tab.Pane>\n        <Tab.Pane>Accessories</Tab.Pane>\n      </Tab>\n      {dataLoaded ? (\n        name === '' ? (\n          <TableByType data={data} />\n        ) : (\n          <TableByName data={groupData(data)} />\n        )\n      ) : (\n        <LoadingLottie />\n      )}\n    </div>\n  )\n}\n\nexport default PRTable\n","import axios from 'axios'\n\ninterface getAllVolumeProps {\n  username: string\n  token: string\n}\n\nconst getAllVolume = async (props: getAllVolumeProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(`/api/users/${props.username}/stats`, config)\n  return res.data\n}\n\nexport default { getAllVolume }\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Cell, Pie, PieChart, Sector } from 'recharts'\nimport { Header } from 'semantic-ui-react'\nimport { UserContext } from '../../../context/userContext'\nimport metricsService from '../../../services/metricsService'\n\ninterface volumeOutput {\n  _id: string\n  volume: number\n  nl: number\n  weight: number\n}\n\nconst COLORS = ['#ff9f0a', '#5e5ce6', '#ff375f']\n\nconst VolumePiechart: React.FC = () => {\n  const { user } = useContext(UserContext)\n  const [data, setData] = useState<volumeOutput[]>([])\n  const [activeIndexVol, setActiveIndexVol] = useState(-1)\n  const [activeIndexNL, setActiveIndexNL] = useState(-1)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await metricsService.getAllVolume({\n          username: user.username,\n          token: user.token\n        })\n        setData(res)\n      }\n    }\n    fetchData()\n  }, [user])\n\n  const renderActiveShape = (props: any, type: string) => {\n    const RADIAN = Math.PI / 180\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value\n    } = props\n    const sin = Math.sin(-RADIAN * midAngle)\n    const cos = Math.cos(-RADIAN * midAngle)\n    const sx = cx + (outerRadius + 10) * cos\n    const sy = cy + (outerRadius + 10) * sin\n    const mx = cx + (outerRadius + 30) * cos\n    const my = cy + (outerRadius + 30) * sin\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22\n    const ey = my\n    const textAnchor = cos >= 0 ? 'start' : 'end'\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\n          {payload._id}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill='none'\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill='white'\n        >\n          {type === 'vol' ? `Volume ${value} kg` : `NL: ${value}`}\n        </text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill='#999'\n        >\n          {`(${(percent * 100).toFixed(0)}% of total)`}\n        </text>\n      </g>\n    )\n  }\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      <div style={{ border: '1px solid white' }}>\n        <Header inverted content='Volume' style={{ textAlign: 'center' }} />\n\n        <PieChart height={300} width={450}>\n          <Pie\n            data={data}\n            dataKey='volume'\n            activeIndex={activeIndexVol}\n            activeShape={e => renderActiveShape(e, 'vol')}\n            cx={200}\n            cy={150}\n            innerRadius={60}\n            outerRadius={80}\n            onMouseEnter={(entry, index) => setActiveIndexVol(index)}\n            onTouchStart={(entry, index) => setActiveIndexVol(index)}\n          >\n            {data.map((entry, i) => (\n              <Cell key={i} fill={COLORS[i % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n      <div style={{ border: '1px solid white' }}>\n        <Header\n          inverted\n          content='Number of lifts'\n          style={{ textAlign: 'center' }}\n        />\n\n        <PieChart height={300} width={450}>\n          <Pie\n            data={data}\n            dataKey='nl'\n            activeIndex={activeIndexNL}\n            activeShape={e => renderActiveShape(e, 'nl')}\n            cx={200}\n            cy={150}\n            innerRadius={60}\n            outerRadius={80}\n            onMouseEnter={(entry, index) => setActiveIndexNL(index)}\n            onTouchStart={(entry, index) => setActiveIndexNL(index)}\n          >\n            {data.map((entry, i) => (\n              <Cell key={i} fill={COLORS[i % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    </div>\n  )\n}\n\nexport default VolumePiechart\n","import VolumePiechart from './VolumePiechart'\nexport default VolumePiechart\n","import BodyweightForm from './BodyweightForm'\nexport default BodyweightForm\n","import React from 'react'\nimport { TransitionablePortal, Segment } from 'semantic-ui-react'\nimport BodyweightPlainForm from './PlainForm'\n\ninterface BodyweightFormProps {\n  open: boolean\n  setOpen(value: boolean): void\n  setBodyweight(value: number): void\n  addBodyweight(): void\n  btnText: string\n}\n\nconst BodyweightForm: React.FC<BodyweightFormProps> = ({\n  open,\n  setOpen,\n  setBodyweight,\n  addBodyweight,\n  btnText\n}) => {\n  return (\n    <TransitionablePortal open={open} onClose={() => setOpen(false)}>\n      <Segment\n        inverted\n        style={{\n          left: '40%',\n          position: 'fixed',\n          top: '20%',\n          zIndex: 1200,\n          border: '2px white solid'\n        }}\n      >\n        <BodyweightPlainForm\n          setBodyweight={setBodyweight}\n          addBodyweight={addBodyweight}\n          btnText={btnText}\n          setOpen={setOpen}\n        />\n      </Segment>\n    </TransitionablePortal>\n  )\n}\n\nexport default BodyweightForm\n","import axios from 'axios'\n\ninterface getExerciseProps {\n  username: string\n  token: string\n  type?: string\n  name?: string\n}\n\nconst getExercises = async (props: getExerciseProps) => {\n  const baseURL: string = `/api/users/${props.username}/exercises`\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  let result\n  if (props.type && props.name) {\n    result = await axios.get(baseURL + `/${props.type}/${props.name}`, config)\n  } else if (props.type) {\n    result = await axios.get(baseURL + `/${props.type}`, config)\n  } else {\n    result = await axios.get(baseURL, config)\n  }\n  return result.data\n}\n\ninterface postExerciseProps {\n  username: string\n  token: string\n  type: string\n  name: string\n  variation: string\n  reps: number\n  weight: number\n}\n\nconst postExercise = async (props: postExerciseProps) => {\n  const baseURL: string = `/api/users/${props.username}/exercises`\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.post(baseURL, props, config)\n  return res.data\n}\n\nexport default { getExercises, postExercise }\n","import axios from 'axios'\n\ninterface getAllProps {\n  username: string\n  token: string\n}\n\nconst getAll = async (props: getAllProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(`/api/users/${props.username}/workouts`, config)\n  return res.data\n}\n\ninterface getByDateProps {\n  username: string\n  token: string\n  date: Date\n}\n\nconst getByDate = async (props: getByDateProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(\n    `/api/users/${props.username}/workouts/${props.date}`,\n    config\n  )\n  return res.data\n}\n\ninterface newWorkoutExercise {\n  type: string\n  name: string\n  variation: string\n  reps: number[]\n  sets: number[]\n  intensity?: number[]\n  RPE: number[]\n}\n\ninterface newWorkoutProps {\n  date: Date\n  notes: string\n  readiness: number\n  exercises: newWorkoutExercise[]\n  username: string\n  token: string\n}\n\nconst create = async (props: newWorkoutProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.post(\n    `/api/users/${props.username}/workouts`,\n    props,\n    config\n  )\n  return res.data\n}\n\ninterface getMonthProps {\n  username: string\n  token: string\n  date: Date\n}\n\nconst getMonth = async (props: getMonthProps) => {\n  const config = {\n    headers: { Authorization: `bearer ${props.token}` }\n  }\n  const res = await axios.get(\n    `/api/users/${props.username}/workouts/${props.date}/month`,\n    config\n  )\n  return res.data\n}\n\nexport default { getAll, getByDate, getMonth, create }\n","import WorkoutPlainForm from './WorkoutPlainForm'\nexport default WorkoutPlainForm\n","import React, { useContext, useEffect, useState } from 'react'\nimport {\n  Button,\n  Form,\n  Header,\n  Icon,\n  Rating,\n  Segment,\n  Statistic,\n  Table\n} from 'semantic-ui-react'\nimport { UserContext } from '../../../../context/userContext'\nimport exerciseLibraryService from '../../../../services/exerciseLibraryService'\nimport prService from '../../../../services/prService'\nimport workoutService from '../../../../services/workoutService'\n\ninterface ExerciseTable {\n  type: string\n  name: string\n  variation: string\n  pr?: number\n  sets: number[]\n  reps: number[]\n  weight: number[]\n  intensity: number[]\n  RPE: number[]\n}\n\ninterface WorkoutPlainFormProps {\n  date: Date\n  setOpen(value: boolean): void\n}\nconst WorkoutPlainForm: React.FC<WorkoutPlainFormProps> = ({\n  date,\n  setOpen\n}) => {\n  const { user } = useContext(UserContext)\n  const [exName, setExName] = useState('Squat')\n  const [exVariations, setExVariations] = useState<IExercise[]>([])\n  const [exVariation, setExVariation] = useState('Competition')\n  const [pr, setPr] = useState<IPR | null>(null)\n  const [added, setAdded] = useState<ExerciseTable[]>([])\n  const [sets, setSets] = useState(0)\n  const [reps, setReps] = useState(0)\n  const [intensity, setIntensity] = useState(0)\n  const [RPE, setRPE] = useState(0)\n  const [rating, setRating] = useState(3)\n\n  const variations = exVariations.map(ex => ({\n    key: ex.id,\n    value: ex.variation,\n    text: ex.variation\n  }))\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await exerciseLibraryService.getExercises({\n          username: user.username,\n          token: user.token,\n          type: exName === 'Accessories' ? 'acc' : 'sbd',\n          name: exName === 'Accessories' ? '' : exName\n        })\n        const pr = await prService.getOne({\n          current: 'current',\n          token: user.token,\n          username: user.username,\n          name: exName,\n          type: exName === 'Accessories' ? 'acc' : 'sbd',\n          variation: exVariation\n        })\n        setPr(pr)\n        setExVariations(res)\n      }\n    }\n    fetchData()\n  }, [user, exName, exVariation])\n\n  const handleVariationChage = (\n    event: React.SyntheticEvent<HTMLElement>,\n    data: any\n  ) => {\n    setExVariation(data.value)\n  }\n\n  const handleAddSet = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    let index\n    if (\n      added.some((set, i) => {\n        if (set.name === exName && set.variation === exVariation) {\n          index = i\n          return true\n        } else return false\n      })\n    ) {\n      if (index !== null && index !== undefined) {\n        const addedCopy = [...added]\n        const oldSet = addedCopy[index]\n        oldSet.sets = oldSet.sets.concat(sets)\n        oldSet.reps = oldSet.reps.concat(reps)\n        oldSet.weight = pr\n          ? oldSet.weight.concat(\n              2.5 * Math.ceil((pr.weight * intensity) / 100 / 2.5)\n            )\n          : oldSet.weight.concat(0)\n        oldSet.intensity = oldSet.intensity.concat(intensity)\n        oldSet.RPE = oldSet.RPE.concat(RPE)\n        addedCopy[index] = oldSet\n        console.log(addedCopy)\n        setAdded(addedCopy)\n      }\n    } else {\n      const newSet: ExerciseTable = {\n        type: exName === 'Accessories' ? 'acc' : 'sbd',\n        name: exName,\n        variation: exVariation,\n        sets: [sets],\n        reps: [reps],\n        weight: pr\n          ? [2.5 * Math.ceil((pr.weight * intensity) / 100 / 2.5)]\n          : [],\n        intensity: [intensity],\n        RPE: [RPE]\n      }\n      setAdded(added.concat(newSet))\n    }\n  }\n\n  const handleSubmit = async (event: React.SyntheticEvent<HTMLElement>) => {\n    console.log('posting now')\n    const res = await workoutService.create({\n      username: user.username,\n      token: user.token,\n      date: date,\n      notes: 'notes',\n      readiness: rating,\n      exercises: added\n    })\n    setOpen(false)\n    console.log(res)\n  }\n\n  return (\n    <div>\n      <Form inverted>\n        <Form.Group inline>\n          <label> Exercise</label>\n          <Form.Radio\n            label='Squat'\n            value='Squat'\n            checked={exName === 'Squat'}\n            onChange={() => {\n              setExName('Squat')\n              setExVariation('Competition')\n            }}\n          />\n          <Form.Radio\n            label='Bench'\n            value='Bench'\n            checked={exName === 'Bench'}\n            onChange={() => {\n              setExName('Bench')\n              setExVariation('Competition')\n            }}\n          />\n          <Form.Radio\n            label='Deadlift'\n            value='Deadlift'\n            checked={exName === 'Deadlift'}\n            onChange={() => {\n              setExName('Deadlift')\n              setExVariation('Competition')\n            }}\n          />\n          <Form.Radio\n            label='Accessory'\n            value='acc'\n            checked={exName === 'Accessory'}\n            onChange={() => {\n              setExName('Accessory')\n              setExVariation('')\n            }}\n          />\n        </Form.Group>\n\n        <Form.Select\n          placeholder='Variation'\n          options={variations}\n          value={exVariation}\n          clearable\n          onChange={handleVariationChage}\n        />\n\n        <Statistic inverted size='small'>\n          <Statistic.Label>\n            {exVariation} {exName}\n          </Statistic.Label>\n          <Statistic.Value>1RM: {pr ? pr.weight : null} kg</Statistic.Value>\n        </Statistic>\n\n        <Form.Group inline>\n          <Form.Input\n            placeholder='Sets'\n            type='number'\n            style={{ width: '75px' }}\n            value={sets === 0 ? '' : sets}\n            onChange={(e, data) => setSets(Number(data.value))}\n          />\n          <Form.Input\n            placeholder='Reps'\n            type='number'\n            style={{ width: '75px' }}\n            value={reps === 0 ? '' : reps}\n            onChange={(e, data) => setReps(Number(data.value))}\n          />\n          <Form.Input\n            placeholder='RPE'\n            type='number'\n            style={{ width: '75px' }}\n            value={RPE === 0 ? '' : RPE}\n            onChange={(e, data) => setRPE(Number(data.value))}\n          />\n          <Form.Input\n            step='1'\n            placeholder='%'\n            type='number'\n            style={{ width: '75px' }}\n            value={intensity === 0 ? '' : intensity}\n            onChange={(e, data) => setIntensity(Number(data.value))}\n          />\n          <Form.Button icon inverted color='blue' onClick={handleAddSet}>\n            <Icon name='add circle' />\n          </Form.Button>\n        </Form.Group>\n        <Segment.Group>\n          {added.map(ex => (\n            <Segment inverted key={ex.name + ex.variation}>\n              {ex.name} {ex.variation}\n              <Table inverted collapsing unstackable>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Sets</Table.HeaderCell>\n                    <Table.HeaderCell>Reps</Table.HeaderCell>\n                    <Table.HeaderCell>Weight</Table.HeaderCell>\n                    <Table.HeaderCell>Intensity</Table.HeaderCell>\n                    <Table.HeaderCell>RPE</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {ex.sets.map((set, i) => (\n                    <Table.Row key={i}>\n                      <Table.Cell>{set}</Table.Cell>\n                      <Table.Cell>{ex.reps[i]}</Table.Cell>\n                      <Table.Cell>\n                        {ex.weight[i] === 0 ? '-' : ex.weight[i] + 'kg'}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {ex.intensity[i] === 0 ? '-' : ex.intensity[i] + '%'}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {ex.RPE[i] === 0 ? '-' : ex.RPE[i]}\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Segment>\n          ))}\n        </Segment.Group>\n        <Form.TextArea placeholder='Workout notes' />\n        <Header inverted as='h4' content='Rate your readiness' />\n        <Rating\n          as={Button}\n          inverted\n          icon='heart'\n          size='massive'\n          rating={rating}\n          maxRating={5}\n          onRate={(e, data) => setRating(Number(data.rating))}\n        />\n        <p />\n        <Form.Group inline>\n          <Form.Button inverted color='green' onClick={handleSubmit}>\n            Save\n          </Form.Button>\n          <Form.Button inverted color='red' onClick={() => setOpen(false)}>\n            Cancel\n          </Form.Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default WorkoutPlainForm\n","import WorkoutForm from './WorkoutForm'\nexport default WorkoutForm\n","import React from 'react'\nimport { Modal, TransitionablePortal } from 'semantic-ui-react'\nimport WorkoutPlainForm from './PlainForm'\n\ninterface WorkoutFormProps {\n  open: boolean\n  setOpen(value: boolean): void\n  date: Date\n}\n\nconst WorkoutForm: React.FC<WorkoutFormProps> = ({ open, setOpen, date }) => {\n  return (\n    <TransitionablePortal open={open}>\n      <Modal open={true} centered={false} className='inverted'>\n        <Modal.Header>Add new workout</Modal.Header>\n        <Modal.Content>\n          <WorkoutPlainForm setOpen={setOpen} date={date} />\n        </Modal.Content>\n      </Modal>\n    </TransitionablePortal>\n  )\n}\n\nexport default WorkoutForm\n","import CustomCalendar from './CustomCalendar'\nexport default CustomCalendar\n","import moment from 'moment'\nimport React, { useContext, useEffect, useState } from 'react'\nimport Calendar, { CalendarTileProperties } from 'react-calendar'\nimport {\n  Button,\n  Container,\n  Header,\n  Message,\n  TransitionablePortal\n} from 'semantic-ui-react'\nimport BodyweightForm from '../../components/Bodyweight/Form'\nimport CompetitionForm from '../../components/Competition/Form'\nimport WorkoutForm from '../../components/Workouts/Form'\nimport { UserContext } from '../../context/userContext'\nimport bodyweightService from '../../services/bodyweightService'\nimport competitionService from '../../services/competitionService'\nimport workoutService from '../../services/workoutService'\nimport './CustomCalendar.scss'\n\nconst CustomCalendar: React.FC = () => {\n  const [portalOpen, setPortalOpen] = useState(false)\n  const [bwPortalOpen, setBwPortalOpen] = useState(false)\n  const [workoutPortalOpen, setWorkoutPortalOpen] = useState(false)\n  const [compPortalOpen, setCompPortalOpen] = useState(false)\n  const [popupTopPos, setPopupTopPos] = useState(0)\n  const [popupLeftPos, setPopupLeftPos] = useState(0)\n  const [selectedDay, setSelectedDay] = useState(moment().toDate())\n  const [startOfMonth, setStartOfMonth] = useState(\n    moment()\n      .startOf('month')\n      .toDate()\n  )\n  const [workouts, setWorkouts] = useState<number[]>([])\n  const [bodyweights, setBodyweights] = useState<number[]>([])\n  const [competitions, setCompetitions] = useState<number[]>([])\n  const [bodyweight, setBodyweight] = useState(0)\n  const [msg, setMsg] = useState<null | string>(null)\n  const { user } = useContext(UserContext)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const props = {\n        username: user.username,\n        token: user.token,\n        date: startOfMonth\n      }\n      const workouts = await workoutService.getMonth(props)\n      setWorkouts(\n        workouts.map((entry: any) =>\n          moment(entry.date)\n            .startOf('day')\n            .toDate()\n            .getTime()\n        )\n      )\n      const bws = await bodyweightService.getMonth(props)\n\n      setBodyweights(\n        bws.map((bw: any) =>\n          moment(bw.date)\n            .startOf('day')\n            .toDate()\n            .getTime()\n        )\n      )\n      const comps = await competitionService.getMonth(props)\n      setCompetitions(\n        comps.map((comp: any) =>\n          moment(comp.date)\n            .startOf('day')\n            .toDate()\n            .getTime()\n        )\n      )\n    }\n    fetchData()\n    let icon = document.createElement('i')\n    icon.classList.add('icon', 'trophy')\n    const test = document\n      .getElementsByClassName('react-calendar__tile--now')\n      .item(0)\n\n    if (test) {\n      let nodes = Array.from(test.childNodes)\n      if (nodes.length < 2) {\n        test.appendChild(icon)\n      }\n    }\n  }, [user, startOfMonth])\n\n  const handleClick = (event: any) => {\n    setPortalOpen(true)\n    setSelectedDay(event)\n    let monthStart = moment(event)\n      .startOf('month')\n      .toDate()\n    if (monthStart.getTime() !== startOfMonth.getTime()) {\n      setStartOfMonth(monthStart)\n    }\n    const btnEl = document.getElementsByClassName(\n      'react-calendar__tile--active'\n    )\n    let btn = btnEl.item(0)\n    const calEl = document.getElementsByClassName(\n      'react-calendar__month-view__days'\n    )\n    let monthBox = calEl.item(0)\n    if (btn && monthBox) {\n      let btnPos = btn.getBoundingClientRect()\n      let boxPos = monthBox.getBoundingClientRect()\n      if (btnPos.top + 200 > boxPos.bottom) setPopupTopPos(boxPos.bottom - 200)\n      else setPopupTopPos(btnPos.top + 15 + btnPos.height / 2)\n      if (btnPos.left + 150 > boxPos.right) setPopupLeftPos(boxPos.right - 150)\n      else setPopupLeftPos(btnPos.left)\n    }\n  }\n\n  const drawWorkoutIcons = (\n    props: CalendarTileProperties\n  ): React.ReactElement => {\n    const { date } = props\n    let arr = []\n    if (workouts.includes(date.getTime())) {\n      arr.push(\n        <i\n          className='ui icon dumbbell large green'\n          key={date.getTime() + 'workout'}\n        />\n      )\n    }\n    if (bodyweights.includes(date.getTime())) {\n      arr.push(\n        <i className='ui icon weight large blue' key={date.getTime() + 'bw'} />\n      )\n    }\n    if (competitions.includes(date.getTime())) {\n      arr.push(\n        <i\n          className='ui icon trophy large yellow'\n          key={date.getTime() + 'comp'}\n        />\n      )\n    }\n    return <div>{arr}</div>\n  }\n\n  const addBodyweight = async () => {\n    const dateObj = moment(selectedDay).toDate()\n    if (user) {\n      const result = await bodyweightService.addBw({\n        date: dateObj,\n        bodyweight: bodyweight,\n        username: user.username,\n        token: user.token\n      })\n      setMsg(\n        `Successfully added new bodyweight (${\n          result.bodyweight\n        } kg) to ${moment(result.date).format('MMMM Do, YYYY')}`\n      )\n      setTimeout(() => {\n        setMsg(null)\n      }, 3000)\n      setBwPortalOpen(false)\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Message\n        header='Sucess'\n        content={msg}\n        hidden={msg ? false : true}\n        success\n      />\n\n      <Calendar\n        minDetail='year'\n        onChange={handleClick}\n        className='react-calendar'\n        tileContent={drawWorkoutIcons}\n        onActiveDateChange={({ activeStartDate }) =>\n          setStartOfMonth(activeStartDate)\n        }\n      />\n      <TransitionablePortal\n        onClose={() => setPortalOpen(false)}\n        open={portalOpen}\n      >\n        <Button.Group\n          style={{\n            left: `${popupLeftPos}px`,\n            position: 'fixed',\n            top: `${popupTopPos}px`,\n            maxWidth: '155px',\n            maxHeight: '200px',\n            zIndex: 1000,\n            backgroundColor: 'black'\n            // border: '3px solid rgba(255,0,0,0.5)'\n          }}\n          vertical\n          size='small'\n          inverted\n          color='red'\n        >\n          <Button\n            size='mini'\n            style={{ border: '2px white solid' }}\n            onClick={() => {\n              setPortalOpen(false)\n              setBwPortalOpen(true)\n            }}\n          >\n            Log bodyweight\n          </Button>\n\n          <Button\n            size='mini'\n            style={{ border: '2px white solid' }}\n            onClick={() => {\n              setPortalOpen(false)\n              setWorkoutPortalOpen(true)\n            }}\n          >\n            New workout\n          </Button>\n\n          <Button\n            size='mini'\n            style={{ border: '2px white solid' }}\n            onClick={() => {\n              setPortalOpen(false)\n              setCompPortalOpen(true)\n            }}\n          >\n            New competition\n          </Button>\n\n          <div />\n        </Button.Group>\n      </TransitionablePortal>\n      <BodyweightForm\n        addBodyweight={addBodyweight}\n        setBodyweight={setBodyweight}\n        open={bwPortalOpen}\n        setOpen={setBwPortalOpen}\n        btnText='Add'\n      />\n      <CompetitionForm\n        open={compPortalOpen}\n        setOpen={setCompPortalOpen}\n        date={moment(selectedDay).toDate()}\n      />\n      <WorkoutForm\n        setOpen={setWorkoutPortalOpen}\n        open={workoutPortalOpen}\n        date={moment(selectedDay).toDate()}\n      />\n      <Header inverted as='h4'>\n        {moment(selectedDay).format('MMMM D, YYYY') + ' selected'}\n      </Header>\n    </Container>\n  )\n}\n\nexport default CustomCalendar\n","import Workout from './Workout'\nexport default Workout\n","import moment from 'moment'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Accordion, Header, Icon, Segment, Table } from 'semantic-ui-react'\nimport { UserContext } from '../../../context/userContext'\nimport workoutService from '../../../services/workoutService'\n\ninterface WorkoutProps {\n  date: Date\n}\n\nconst Workout: React.FC<WorkoutProps> = ({ date }) => {\n  const [activeExerciseIndex, setActiveExerciseIndex] = useState([-1])\n  const [exercises, setExercises] = useState<IGroupedExerciseInstances[]>([])\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await workoutService.getByDate({\n          username: user.username,\n          token: user.token,\n          date: date\n        })\n        const groupedExercises = groupData(res.exercises)\n        setExercises(groupedExercises)\n      }\n    }\n    fetchData()\n  }, [user, date])\n\n  const groupData = (\n    data: IExerciseInstance[]\n  ): IGroupedExerciseInstances[] => {\n    let groupedArray: IGroupedExerciseInstances[] = []\n    if (data) {\n      data.forEach((entry, i) => {\n        if (\n          !groupedArray.some(\n            (item: any) =>\n              item.exercise.variation === entry.exercise.variation &&\n              item.exercise.name === entry.exercise.name\n          )\n        ) {\n          let newEntry = {\n            exercise: entry.exercise,\n            id: entry.id,\n            reps: [entry.reps],\n            sets: [entry.sets],\n            intensity: [entry.intensity],\n            RPE: [entry.RPE],\n            weight: [entry.weight],\n            isPR: [entry.isPR]\n          }\n          groupedArray.push(newEntry)\n        } else {\n          let oldEntry = groupedArray.pop()\n          let newEntry = {\n            exercise: entry.exercise,\n            id: entry.id,\n            reps: oldEntry ? oldEntry.reps.concat(entry.reps) : [],\n            sets: oldEntry ? oldEntry.sets.concat(entry.sets) : [],\n            intensity: oldEntry\n              ? oldEntry.intensity.concat(entry.intensity)\n              : [],\n            RPE: oldEntry ? oldEntry.RPE.concat(entry.RPE) : [],\n            weight: oldEntry ? oldEntry.weight.concat(entry.weight) : [],\n            isPR: oldEntry ? oldEntry.isPR.concat(entry.isPR) : []\n          }\n          groupedArray.push(newEntry)\n        }\n      })\n    }\n    return groupedArray\n  }\n\n  const handleClick = (index: number) => {\n    if (activeExerciseIndex.includes(index)) {\n      setActiveExerciseIndex(activeExerciseIndex.filter(i => i !== index))\n    } else {\n      setActiveExerciseIndex(activeExerciseIndex.concat(index))\n    }\n  }\n  return (\n    <Segment compact inverted style={{ border: '2px solid white' }}>\n      <Header inverted>{moment(date).format('MMMM Do')}</Header>\n      <Accordion\n        styled\n        inverted\n        exclusive={false}\n        style={{ backgroundColor: '#1C1C1E' }}\n      >\n        {exercises.length === 0 ? (\n          <Header inverted as='h5'>\n            No workout planned\n          </Header>\n        ) : (\n          exercises.map((ex, i) => (\n            <div key={i}>\n              <Accordion.Title\n                as={Header}\n                index={i}\n                active={activeExerciseIndex.includes(i)}\n                key={ex.id}\n                onClick={() => handleClick(i)}\n                style={{\n                  marginTop: '10px',\n                  color: 'white',\n                  borderRadius: '10px',\n                  backgroundColor:\n                    ex.exercise.name === 'Squat'\n                      ? '#ff375f'\n                      : ex.exercise.name === 'Bench'\n                      ? '#ff9f0a'\n                      : ex.exercise.name === 'Deadlift'\n                      ? '#5e5ce6'\n                      : '#2c2c2e'\n                }}\n              >\n                <Icon name='dropdown' />\n                {ex.exercise.name} ({ex.exercise.variation})\n              </Accordion.Title>\n              <Accordion.Content active={activeExerciseIndex.includes(i)}>\n                <Table inverted unstackable collapsing textAlign='center'>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Sets</Table.HeaderCell>\n                      <Table.HeaderCell>Reps</Table.HeaderCell>\n                      <Table.HeaderCell>Weight</Table.HeaderCell>\n                      <Table.HeaderCell>Intensity</Table.HeaderCell>\n                      <Table.HeaderCell>RPE</Table.HeaderCell>\n                      <Table.HeaderCell>PR</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {ex.sets.map((set, i) => (\n                      <Table.Row key={ex.id + i}>\n                        <Table.Cell>{ex.sets[i]}</Table.Cell>\n                        <Table.Cell>{ex.reps[i]}</Table.Cell>\n                        <Table.Cell>{ex.weight[i]}</Table.Cell>\n                        <Table.Cell>{ex.intensity[i]}</Table.Cell>\n                        <Table.Cell>{ex.RPE[i]}</Table.Cell>\n                        <Table.Cell>\n                          {ex.isPR[i] ? <Icon name='check' /> : <div />}\n                        </Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Accordion.Content>\n            </div>\n          ))\n        )}\n      </Accordion>\n    </Segment>\n  )\n}\n\nexport default Workout\n","import WorkoutWeek from './WorkoutWeek'\nexport default WorkoutWeek\n","import moment from 'moment'\nimport React from 'react'\nimport { Accordion } from 'semantic-ui-react'\nimport Workout from './Workout'\n\ninterface WorkoutWeekProps {\n  startDate: Date\n}\n\nconst WorkoutWeek: React.FC<WorkoutWeekProps> = ({ startDate }) => {\n  let currentWeek = []\n  let weekStart = moment(startDate).startOf('week')\n  for (let i = 1; i <= 7; i++) {\n    currentWeek.push(moment(weekStart).add(i, 'days'))\n  }\n  return (\n    <Accordion inverted exclusive={false}>\n      {currentWeek.map((date, i) => (\n        <div key={i}>\n          <p />\n          <Workout key={i + 'workout'} date={date.toDate()} />\n        </div>\n      ))}\n    </Accordion>\n  )\n}\n\nexport default WorkoutWeek\n","import Dashboard from './Dashboard'\nexport default Dashboard\n","import moment from 'moment'\nimport React, { useContext, useState } from 'react'\nimport Calendar from 'react-calendar'\nimport { Button, Checkbox, Form, Header } from 'semantic-ui-react'\nimport WorkoutWeek from '../../components/Workouts'\nimport Workout from '../../components/Workouts/Workout'\nimport { UserContext } from '../../context/userContext'\n\nconst Dashboard: React.FC = () => {\n  const { user } = useContext(UserContext)\n  const [checked, setChecked] = useState(false)\n  const [startDate, setStartDate] = useState<Date>(\n    moment()\n      .startOf('day')\n      .toDate()\n  )\n  const [showCalendar, setShowCalendar] = useState(false)\n  return (\n    <div>\n      <Header inverted as='h3'>\n        Hi, {user.name} 👋🏻\n      </Header>\n      <Header inverted as='h5'>\n        Today is {moment().format('MMMM DD, YYYY')}\n      </Header>\n      <Form>\n        <Form.Field inline>\n          <div>\n            <label style={{ color: 'white', marginRight: '1em' }}> Daily</label>\n            <Checkbox\n              toggle\n              checked={checked}\n              onChange={() => setChecked(!checked)}\n              className='inverted'\n              label='Weekly'\n            />\n            <Button\n              inverted\n              color='blue'\n              content={showCalendar ? 'Hide calendar' : 'Show calendar'}\n              onClick={() => setShowCalendar(!showCalendar)}\n              style={{ marginLeft: '10px' }}\n            />\n          </div>\n        </Form.Field>\n      </Form>\n      <p />\n\n      {showCalendar ? (\n        <div style={{ width: '400px', marginTop: '10px' }}>\n          <Calendar\n            className='mini'\n            onClickDay={setStartDate}\n            minDetail='month'\n          />\n        </div>\n      ) : (\n        <div />\n      )}\n      <p />\n      {!checked ? (\n        <Workout date={startDate} />\n      ) : (\n        <WorkoutWeek startDate={startDate} />\n      )}\n    </div>\n  )\n}\nexport default Dashboard\n","import React from 'react'\nimport Lottie from 'react-lottie'\nimport animationData from './success.json'\n\nconst SuccessLottie: React.FC = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: false,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n  return <Lottie options={defaultOptions} height={150} width={150} />\n}\n\nexport default SuccessLottie\n","import NewExerciseForm from './NewExerciseForm'\nexport default NewExerciseForm\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Button,\n  Form,\n  Transition,\n  Dimmer,\n  Message\n} from 'semantic-ui-react'\nimport exerciseLibraryService from '../../services/exerciseLibraryService'\nimport SuccessLottie from '../../animations/SuccessLottie'\n\ninterface NewExerciseFormProps {\n  isOpen: boolean\n  closePortal(): void\n  user: IUser | undefined | null\n}\n\ninterface customName {\n  key: string\n  value: string\n  text: string\n}\n\nconst NewExerciseForm: React.FC<NewExerciseFormProps> = ({\n  isOpen,\n  closePortal,\n  user\n}) => {\n  const [type, setType] = useState('')\n  const [name, setName] = useState('')\n  const [inputName, setInputName] = useState('')\n  const [customNames, setCustomNames] = useState<customName[]>([])\n  const [variation, setVariation] = useState('')\n  const [dimmed, setDimmed] = useState(false)\n  const [pr, setPr] = useState(0.2)\n  const [errMsg, setErrMsg] = useState('')\n\n  const handleTypeChange = async (\n    event: React.SyntheticEvent<HTMLElement>,\n    data: any\n  ) => {\n    setType(data.value)\n    if (data.value === 'sbd') {\n      setCustomNames([\n        { key: 'squat', value: 'Squat', text: 'Squat' },\n        { key: 'bench', value: 'Bench', text: 'Bench' },\n        { key: 'deadlift', value: 'Deadlift', text: 'Deadlift' }\n      ])\n    } else {\n      setName('')\n      if (user) {\n        const names = await exerciseLibraryService.getExercises({\n          username: user.username,\n          type: data.value,\n          token: user.token\n        })\n        const mapped = names.map((name: any) => ({\n          ...name,\n          key: name.name + '/' + name.variation\n        }))\n        setCustomNames(mapped)\n      } else setCustomNames([])\n    }\n  }\n  const handleNameChange = (\n    event: React.SyntheticEvent<HTMLElement>,\n    data: any\n  ) => {\n    setName(data.value)\n  }\n\n  const handleInputNameChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setInputName(event.currentTarget.value)\n  }\n\n  const handleVariationChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setVariation(event.currentTarget.value)\n  }\n\n  const handlePrChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setPr(Number(event.currentTarget.value))\n  }\n\n  const handleSubmit = async () => {\n    if (user && (name || inputName) && type && variation && pr) {\n      setDimmed(true)\n\n      await exerciseLibraryService.postExercise({\n        username: user.username,\n        token: user.token,\n        type: type,\n        name: name === '' || name === undefined ? inputName : name,\n        variation: variation,\n        reps: 1,\n        weight: pr\n      })\n\n      await new Promise(resolve => {\n        setTimeout(() => {\n          setDimmed(false)\n          closePortal()\n        }, 3000)\n      })\n    } else {\n      setErrMsg('Please fill in all fields')\n      setTimeout(() => {\n        setErrMsg('')\n      }, 2000)\n    }\n  }\n\n  return (\n    <Transition visible={isOpen} animation='slide down' duration={500}>\n      <Dimmer.Dimmable\n        dimmed={dimmed}\n        as={Modal}\n        closeIcon\n        dimmer='blurring'\n        open={isOpen}\n        centered={false}\n        onClose={closePortal}\n        className='inverted'\n      >\n        <Modal.Header>Add new exercise</Modal.Header>\n        <Modal.Content>\n          <Message error hidden={errMsg === ''}>\n            <Message.Header>Something went wrong</Message.Header>\n            <Message.Content>{errMsg}</Message.Content>\n          </Message>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Dropdown\n                value={type}\n                label='Exercise type'\n                placeholder='Exercise type'\n                options={[\n                  { key: 'sbd', value: 'sbd', text: 'Main' },\n                  { key: 'acc', value: 'acc', text: 'Accessory' }\n                ]}\n                onChange={handleTypeChange}\n              />\n              {customNames.length > 0 ? (\n                <Form.Dropdown\n                  clearable\n                  value={name}\n                  label='Exercise name'\n                  placeholder='Exercise name'\n                  options={customNames}\n                  onChange={handleNameChange}\n                />\n              ) : (\n                <div />\n              )}\n            </Form.Group>\n            {name === '' || name === undefined ? (\n              <Form.Input\n                value={inputName}\n                placeholder='Exercise Name'\n                type='text'\n                onChange={handleInputNameChange}\n              />\n            ) : (\n              <div />\n            )}\n            <Form.Input\n              placeholder='Variation'\n              type='text'\n              value={variation}\n              onChange={handleVariationChange}\n            />\n            <Form.Input\n              placeholder='1RM (minimum increment is 0.5 kg)'\n              type='number'\n              value={pr === 0.2 ? '' : pr}\n              error={pr < 0.2}\n              step='0.5'\n              onChange={handlePrChange}\n            />\n            <Button type='submit' color='green' inverted>\n              Add exercise\n            </Button>\n            <Button color='red' inverted onClick={closePortal}>\n              Cancel\n            </Button>\n          </Form>\n        </Modal.Content>\n        <Dimmer active={dimmed}>\n          <SuccessLottie />\n          <h4>\n            {variation} {name === '' || name === undefined ? inputName : name}{' '}\n            added to exercises!\n          </h4>\n        </Dimmer>\n      </Dimmer.Dimmable>\n    </Transition>\n  )\n}\n\nexport default NewExerciseForm\n","import ExerciseLibrary from './ExerciseLibrary'\nexport default ExerciseLibrary\n","import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, Header, Icon, Table } from 'semantic-ui-react'\nimport exerciseLibraryService from '../../services/exerciseLibraryService'\nimport NewExerciseForm from '../NewExerciseForm'\n\ninterface ExerciseLibraryProps {\n  user: IUser | null | undefined\n}\n\nconst ExerciseLibrary: React.FC<ExerciseLibraryProps> = ({ user }) => {\n  const [exercises, setExercises] = useState<IExercise[]>([])\n  const [exerciseType, setExerciseType] = useState('')\n  const [exerciseName, setExerciseName] = useState('')\n  const [portalOpen, setPortalOpen] = useState(false)\n\n  const uniqueNames = Array.from(\n    new Set(exercises.map(exercise => exercise.name))\n  )\n  const names = uniqueNames.map(ex => ({\n    key: ex,\n    value: ex,\n    text: ex.charAt(0).toUpperCase() + ex.slice(1)\n  }))\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await exerciseLibraryService.getExercises({\n          username: user.username,\n          token: user.token,\n          type: exerciseType,\n          name: exerciseName\n        })\n        setExercises(res)\n      }\n    }\n    fetchData()\n  }, [user, exerciseType, exerciseName])\n\n  const handleTypeSelect = (\n    event: React.SyntheticEvent<HTMLElement>,\n    data: any\n  ) => {\n    setExerciseType(data.value)\n  }\n\n  const handleExerciseSelect = (\n    event: React.SyntheticEvent<HTMLElement>,\n    data: any\n  ) => {\n    setExerciseName(data.value)\n  }\n\n  return (\n    <div>\n      <Header inverted>My exercise library</Header>\n      <Dropdown\n        clearable\n        selection\n        placeholder='Select exercise type'\n        options={[\n          { key: '', value: '', text: 'All' },\n          { key: 'sbd', value: 'sbd', text: 'Main' },\n          { key: 'acc', value: 'acc', text: 'Accessory' }\n        ]}\n        value={exerciseType}\n        onChange={handleTypeSelect}\n        className='inverted'\n      />\n      <Dropdown\n        clearable\n        selection\n        placeholder='Select exercise'\n        options={names}\n        onChange={handleExerciseSelect}\n        className='inverted'\n      />\n\n      <Table inverted celled collapsing selectable unstackable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Exercise</Table.HeaderCell>\n            <Table.HeaderCell>Variation</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {exercises.map(exercise => (\n            <Table.Row key={exercise.id}>\n              <Table.Cell collapsing>\n                {exercise.name.charAt(0).toUpperCase() + exercise.name.slice(1)}\n              </Table.Cell>\n              <Table.Cell collapsing>\n                {exercise.variation.charAt(0).toUpperCase() +\n                  exercise.variation.slice(1)}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Button\n                inverted\n                color='violet'\n                floated='left'\n                onClick={() => setPortalOpen(!portalOpen)}\n              >\n                <Icon name='add circle' />\n                Add new exercise\n              </Button>\n\n              <NewExerciseForm\n                isOpen={portalOpen}\n                closePortal={() => setPortalOpen(false)}\n                user={user}\n              />\n            </Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  )\n}\n\nexport default ExerciseLibrary\n","import Notification from './Notification'\nexport default Notification\n","import React, { useState } from 'react'\nimport { Transition, Icon } from 'semantic-ui-react'\n\ninterface NotificationProps {\n  message: string\n  iconName: string\n}\n\nconst Notification: React.FC<NotificationProps> = ({ message, iconName }) => {\n  const [open, setOpen] = useState(true)\n  return (\n    <Transition\n      visible={open}\n      animation='zoom'\n      duration={500}\n      unmountOnHide={true}\n      transitionOnMount={true}\n    >\n      <div className='toast-box compact visible'>\n        <div className='icon info ui toast blue'>\n          <Icon onClick={() => setOpen(false)} name='close' />\n          {iconName === 'trophy' ? (\n            <Icon name='trophy' />\n          ) : iconName === 'info' ? (\n            <Icon name='info' />\n          ) : (\n            <div />\n          )}\n          <div className='content'>\n            <div>{message}</div>\n          </div>\n        </div>\n      </div>\n    </Transition>\n  )\n}\n\nexport default Notification\n","import NotificationGroup from './NotificationGroup'\nexport default NotificationGroup\n","import React, { useState, useEffect } from 'react'\nimport Notification from '../Notification'\n\ninterface Notification {\n  message: string\n  iconName: string\n  id: string\n}\n\ninterface NotificationGroupProps {\n  notifications: Notification[]\n}\n\nconst NotificationGroup: React.FC<NotificationGroupProps> = ({\n  notifications\n}) => {\n  const [children, setChildren] = useState<Notification[]>([])\n\n  useEffect(() => {\n    setChildren(notifications)\n  }, [notifications])\n\n  return (\n    <div className='ui bottom right toast-container'>\n      {children.map(el => (\n        <Notification iconName={el.iconName} message={el.message} key={el.id} />\n      ))}\n    </div>\n  )\n}\n\nexport default NotificationGroup\n","import UserProfile from './Profile'\nexport default UserProfile\n","import React, { useContext, useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {\n  Button,\n  Card,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Label\n} from 'semantic-ui-react'\nimport LoadingLottie from '../../animations/LoadingLottie'\nimport BodyweightChart from '../../components/Bodyweight/Chart'\nimport ExerciseLibrary from '../../components/ExerciseLibrary'\nimport NotificationGroup from '../../components/NotificationGroup'\nimport VolumePiechart from '../../components/VolumeCharts/Piechart'\nimport { UserContext } from '../../context/userContext'\nimport bodyweightService from '../../services/bodyweightService'\n\nconst UserProfile: React.FC = () => {\n  const { user } = useContext(UserContext)\n\n  const [data, setData] = useState<IBodyweight[]>([])\n  const [dataLoaded, setDataLoaded] = useState(false)\n  const [notifications, setNotifications] = useState([\n    { message: 'moi', iconName: 'info', id: '1' },\n    { message: 'oho', iconName: 'trophy', id: '2' }\n  ])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const res = await bodyweightService.getBw({\n          username: user.username,\n          token: user.token\n        })\n\n        setData(res)\n        setDataLoaded(true)\n      }\n    }\n    fetchData()\n  }, [user])\n\n  return (\n    <div>\n      <Grid doubling columns={2} style={{ margin: '2%' }}>\n        <Grid.Row>\n          {user !== undefined && user !== null ? (\n            <Grid.Column width={4}>\n              <Card className='inverted'>\n                <Image\n                  src={\n                    user.avatar === 'default'\n                      ? 'https://res.cloudinary.com/yusif/image/upload/v1562012928/ove22swyg688lvfvnw5m.png'\n                      : user.avatar\n                  }\n                  label={\n                    <Label\n                      as={NavLink}\n                      to='/settings#second'\n                      corner='left'\n                      icon='cog'\n                      className='inverted'\n                      color='pink'\n                    />\n                  }\n                />\n\n                <Card.Content>\n                  <Card.Header>{user.name}</Card.Header>\n                  <Card.Meta>Joined in 2019</Card.Meta>\n                  <Card.Description>\n                    {user.name} is a powerlifter!\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Icon name='user' />\n                  420 wilks!!!\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          ) : (\n            <div />\n          )}\n\n          <Grid.Column width={12}>\n            <Header inverted>Recent bodyweight</Header>\n            {dataLoaded ? (\n              <BodyweightChart data={data} />\n            ) : (\n              <div>\n                <LoadingLottie />\n                <Header as='h2' inverted>\n                  Loading data...\n                </Header>\n              </div>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <VolumePiechart />\n        </Grid.Row>\n        <Grid.Row>\n          <ExerciseLibrary user={user} />\n        </Grid.Row>\n      </Grid>\n\n      <Button\n        onClick={() =>\n          setNotifications(\n            notifications.concat({\n              message: 'uwu',\n              iconName: 'trophy',\n              id: '3'\n            })\n          )\n        }\n      >\n        add notification!\n      </Button>\n\n      <NotificationGroup notifications={notifications} />\n    </div>\n  )\n}\n\nexport default UserProfile\n","import UserSettings from './Settings'\nexport default UserSettings\n","import React, { useContext, useState } from 'react'\nimport axios from 'axios'\nimport { Header, Container, Button } from 'semantic-ui-react'\nimport './Settings.scss'\nimport { UserContext } from '../../context/userContext'\n\nconst UserSettings: React.FC = () => {\n  const { user, setUser } = useContext(UserContext)\n  const [file, setFile] = useState<File | null>(null)\n\n  const handleFileChange = (e: any) => {\n    setFile(e[0])\n  }\n\n  const handleFileUpload = async () => {\n    const selectedFile = file as File\n    const formData = new FormData()\n    formData.append('file', selectedFile)\n    if (user !== null && user !== undefined) {\n      formData.append('username', user.username)\n      formData.append('token', user.token)\n    }\n\n    await axios\n      .post(`/api/users/${user.username}/profile_pic`, formData, {\n        onUploadProgress: progressEvent => {\n          console.log(progressEvent.loaded / progressEvent.total)\n        },\n        headers: { Authorization: `bearer ${user.token}` }\n      })\n      .then(newUser => {\n        newUser.data.loggedIn = true\n        setUser(newUser.data)\n        setFile(null)\n      })\n  }\n  return (\n    <Container>\n      <Header inverted as='h2'>\n        Set your profile picture\n      </Header>\n      <div>\n        <input\n          id='file'\n          type='file'\n          onChange={e => handleFileChange(e.target.files)}\n        />\n        <label htmlFor='file' className='btn-2'>\n          <span>Select image</span>\n        </label>\n        <Header inverted as='h5'>\n          {file ? (\n            <div>\n              File: {file.name}\n              <br /> Size: {(file.size / 1024).toFixed(1)} kb\n            </div>\n          ) : null}\n        </Header>\n      </div>\n      <br />\n      <Button inverted color='violet' type='submit' onClick={handleFileUpload}>\n        Submit\n      </Button>\n    </Container>\n  )\n}\n\nexport default UserSettings\n","import Tools from './Tools'\nexport default Tools\n","import React from 'react'\nimport { Grid, Icon, Header } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\nconst Tools: React.FC = () => {\n  return (\n    <div>\n      <Grid doubling columns={3}>\n        <Grid.Column as={NavLink} to='/tools/bodyweight'>\n          <Icon size='huge' inverted name='weight' />\n          <Header inverted as='h3'>\n            Bodyweight\n          </Header>\n        </Grid.Column>\n        <Grid.Column as={NavLink} to='/tools/prs'>\n          <Icon size='huge' inverted name='table' />\n          <Header inverted as='h3'>\n            PR table\n          </Header>\n        </Grid.Column>\n\n        <Grid.Column as={NavLink} to='/tools/volume'>\n          <Icon size='huge' inverted name='chart bar' />\n          <Header inverted as='h3'>\n            Volume\n          </Header>\n        </Grid.Column>\n        <Grid.Column as={NavLink} to='/tools/intensity'>\n          <Icon size='huge' inverted name='pie chart' />\n          <Header inverted as='h3'>\n            Intensity\n          </Header>\n        </Grid.Column>\n\n        <Grid.Column as={NavLink} to='/tools/competitions'>\n          <Icon size='huge' inverted name='trophy' />\n          <Header inverted as='h3'>\n            Competitions\n          </Header>\n        </Grid.Column>\n        <Grid.Column as={NavLink} to='/tools/pointsCalculator'>\n          <Icon size='huge' inverted name='calculator' />\n          <Header inverted as='h3'>\n            IPF points\n          </Header>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Tools\n","import axios from 'axios'\nconst baseUrl: string = '/api/users'\n\nconst register = async (credentials: any) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { register }\n","import RegistrationForm from './RegistrationForm'\nexport default RegistrationForm\n","import React, { useState } from 'react'\nimport { Form, Button, Message } from 'semantic-ui-react'\nimport EmailValidator from 'email-validator'\nimport registrationService from '../../services/registrationService'\n\nconst RegistrationForm: React.FC = () => {\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState<string | null>(null)\n  const [successMessage, setSuccessMessage] = useState<string | null>(null)\n  const [nameError, setNameError] = useState<string | boolean>(false)\n  const [usernameError, setUsernameError] = useState<string | boolean>(false)\n  const [emailError, setEmailError] = useState<string | boolean>(false)\n  const [passwordError, setPasswordError] = useState<string | boolean>(false)\n  const [confirmPasswordError, setConfirmPasswordError] = useState<\n    string | boolean\n  >(false)\n\n  const emptyFields = () => {\n    setName('')\n    setUsername('')\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n  }\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    if (nameError || usernameError || emailError)\n      setErrorMessage('Invalid field values present!')\n    else if (password !== confirmPassword)\n      setErrorMessage('Passwords do not match')\n    else {\n      try {\n        const user = await registrationService.register({\n          username,\n          name,\n          email,\n          password\n        })\n        emptyFields()\n\n        setSuccessMessage(`Registration successful for ${user.name}`)\n      } catch (exception) {\n        setErrorMessage(exception.response.data.error)\n      }\n    }\n    setTimeout(() => {\n      setSuccessMessage(null)\n      setErrorMessage(null)\n    }, 3000)\n  }\n\n  const validateName = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    let newName = event.currentTarget.value\n    if (newName.length < 3) setNameError('Name too short')\n    else setNameError(false)\n  }\n\n  const validateUsername = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    if (username.length < 3) setUsernameError('Username too short')\n    else setUsernameError(false)\n  }\n\n  const validateEmail = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    let validEmail = EmailValidator.validate(email)\n    if (!validEmail) setEmailError('Invalid email address')\n    else setEmailError(false)\n  }\n\n  const validatePassword = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    if (password === '') setPasswordError('Password cannot be empty')\n    else if (password.length < 5)\n      setPasswordError('Password must contain at least 5 symbols')\n    else setPasswordError(false)\n  }\n  const validateConfirmPassword = (\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    event.preventDefault()\n    if (confirmPassword === '')\n      setConfirmPasswordError('Password cannot be empty')\n    else if (confirmPassword.length < 5)\n      setConfirmPasswordError('Password must contain at least 5 symbols')\n    else setConfirmPasswordError(false)\n  }\n\n  return (\n    <div>\n      {errorMessage === null ? (\n        <div />\n      ) : (\n        <Message negative>{errorMessage}</Message>\n      )}\n      {successMessage === null ? (\n        <div />\n      ) : (\n        <Message positive>{successMessage}</Message>\n      )}\n      <Form inverted onSubmit={handleSubmit}>\n        <Form.Input\n          error={nameError}\n          icon='user'\n          iconPosition='left'\n          label='Name'\n          placeholder='Name'\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n          onBlur={validateName}\n        />\n        <Form.Input\n          error={usernameError}\n          icon='user plus'\n          iconPosition='left'\n          label='Username'\n          placeholder='Username'\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          onBlur={validateUsername}\n        />\n        <Form.Input\n          error={emailError}\n          icon='envelope'\n          iconPosition='left'\n          label='Email'\n          placeholder='Email'\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          onBlur={validateEmail}\n        />\n        <Form.Input\n          error={passwordError}\n          icon='lock'\n          iconPosition='left'\n          label='Password'\n          type='password'\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          onBlur={validatePassword}\n        />\n        <Form.Input\n          error={confirmPasswordError}\n          icon='lock'\n          iconPosition='left'\n          label='Confirm Password'\n          type='password'\n          value={confirmPassword}\n          onChange={({ target }) => setConfirmPassword(target.value)}\n          onBlur={validateConfirmPassword}\n        />\n        <Button type='submit'>Register</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default RegistrationForm\n","import Router from './Router'\n\nexport default Router\n","import React, { useContext, useEffect } from 'react'\nimport { Link, Route, Switch } from 'react-router-dom'\nimport { Header } from 'semantic-ui-react'\nimport useReactRouter from 'use-react-router'\nimport Bodyweight from '../../components/Bodyweight'\nimport Competition from '../../components/Competition'\nimport PointCalculator from '../../components/PointCalculator'\nimport PRTable from '../../components/PRTable'\nimport VolumePieChart from '../../components/VolumeCharts/Piechart'\nimport { UserContext } from '../../context/userContext'\nimport CustomCalendar from '../../views/Calendar'\nimport Dashboard from '../../views/Dashboard'\nimport UserProfile from '../../views/Profile'\nimport UserSettings from '../../views/Settings'\nimport Tools from '../../views/Tools'\nimport RegistrationForm from '../RegistrationForm'\n\ninterface IRouter {\n  redirectURL: string\n}\n\nconst RouterLinks: React.FC<IRouter> = ({ redirectURL }) => {\n  const { history } = useReactRouter()\n  const { user } = useContext(UserContext)\n\n  const loggedIn = user.loggedIn\n\n  useEffect(() => {\n    if (loggedIn && (redirectURL === '/login' || redirectURL === '/'))\n      history.push('/dashboard')\n    else if (!loggedIn && redirectURL === '/') history.push('/login')\n  }, [redirectURL, loggedIn, history])\n  return (\n    <div>\n      {loggedIn ? (\n        <div>\n          <Switch>\n            <Route path='/dashboard' component={Dashboard} />\n            <Route path='/profile' component={UserProfile} />\n            <Route path='/settings' component={UserSettings} />\n            <Route path='/calendar' component={CustomCalendar} />\n            <Route exact path='/tools' component={Tools} />\n            <Route\n              exact\n              path='/tools/pointsCalculator'\n              component={PointCalculator}\n            />\n            <Route exact path='/tools/bodyweight' component={Bodyweight} />\n            <Route exact path='/tools/prs' component={PRTable} />\n            <Route exact path='/tools/competitions' component={Competition} />\n            <Route exact path='/tools/volume' component={VolumePieChart} />\n          </Switch>\n        </div>\n      ) : (\n        <div>\n          <Route path='/register' component={RegistrationForm} />\n          <Route\n            path='/signed-out'\n            render={() => (\n              <div>\n                <Header inverted as='h2'>\n                  You have signed out\n                </Header>\n                <Link to='/login'>Login again</Link>\n              </div>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default RouterLinks\n","import MainContent from './MainContent'\nexport default MainContent\n","import React, { useContext, useState } from 'react'\nimport { Route } from 'react-router-dom'\nimport { UserContext } from '../../context/userContext'\nimport loginService from '../../services/loginService'\nimport LoginForm from '../LoginForm'\nimport RouterLinks from '../Router'\nimport './MainContent.scss'\n\ninterface IMainContentProps {\n  isMobile: boolean\n  redirectURL: string\n}\n\nconst MainContent: React.FC<IMainContentProps> = ({\n  isMobile,\n  redirectURL\n}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState<string | null>(null)\n  const { setUser } = useContext(UserContext)\n\n  const handleLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      })\n      user.loggedIn = true\n      window.localStorage.setItem('loggedUser', user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Login failed')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n      console.log(exception)\n    }\n  }\n\n  return (\n    <div className={isMobile ? 'main-content mobile' : 'main-content'}>\n      <RouterLinks redirectURL={redirectURL} />\n      <Route\n        path='/login'\n        render={props => (\n          <LoginForm\n            {...props}\n            username={username}\n            password={password}\n            handleLogin={handleLogin}\n            setPassword={setPassword}\n            setUsername={setUsername}\n            errorMessage={errorMessage}\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nexport default MainContent\n","import SideBar from './SideBar'\nexport default SideBar\n","import React, { useContext } from 'react'\nimport './SideBar.scss'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\nimport { UserContext } from '../../context/userContext'\n\ninterface SideBarProps {\n  isMobile: boolean\n}\n\nconst SideBar: React.FC<SideBarProps> = ({ isMobile }) => {\n  const { user } = useContext(UserContext)\n  const loggedIn = user.loggedIn\n  return (\n    <Menu\n      inverted\n      borderless\n      vertical={isMobile ? false : true}\n      stackable={isMobile ? false : true}\n      fixed={isMobile ? 'bottom' : 'left'}\n      className={isMobile ? 'side-bar mobile' : 'side-bar'}\n      icon='labeled'\n    >\n      <Menu.Item\n        disabled={!loggedIn}\n        as={NavLink}\n        to={loggedIn ? '/dashboard' : '/login'}\n      >\n        <i className='ui icon tachometer alternate' />\n        <p className='white-font'>Dashboard</p>\n      </Menu.Item>\n      <Menu.Item\n        disabled={!loggedIn}\n        as={NavLink}\n        to={loggedIn ? '/profile' : '/login'}\n      >\n        <i className='ui icon user tie' />\n        <p className='white-font'>My profile</p>\n      </Menu.Item>\n      <Menu.Item\n        disabled={!loggedIn}\n        as={NavLink}\n        to={loggedIn ? '/calendar' : '/login'}\n      >\n        <Icon name='calendar alternate' />\n        Calendar\n      </Menu.Item>\n      <Menu.Item\n        disabled={!loggedIn}\n        as={NavLink}\n        to={loggedIn ? '/tools' : '/login'}\n      >\n        <i className='ui icon toolbox' />\n        Tools\n      </Menu.Item>\n      <Menu.Item\n        disabled={!loggedIn}\n        as={NavLink}\n        to={loggedIn ? '/settings' : '/login'}\n      >\n        <Icon name='settings' />\n        Settings\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default SideBar\n","import TopMenu from './TopMenu'\nexport default TopMenu\n","import React, { useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Button, Header, Icon, Image, Menu } from 'semantic-ui-react'\nimport useReactRouter from 'use-react-router'\nimport { UserContext } from '../../context/userContext'\nimport './TopMenu.scss'\n\ninterface TopMenuProps {\n  logo: string\n}\n\nconst TopMenu: React.FC<TopMenuProps> = ({ logo }) => {\n  const { history } = useReactRouter()\n  const { user, setUser } = useContext(UserContext)\n  const loggedIn = user.loggedIn\n  return (\n    <Menu inverted fixed='top' borderless className='top-menu'>\n      <Menu.Item header className='logo'>\n        <Header className='headerInLogo' as={NavLink} to='/'>\n          Voimanosto\n        </Header>\n        <Image src={logo} size='mini' />\n      </Menu.Item>\n      <Menu.Menu position='right'>\n        <Menu.Item>\n          {loggedIn ? (\n            <Menu.Item as={NavLink} to='/notifications'>\n              <div className='ui blue basic label'>\n                <i className='ui big icon bell outline ' />2\n              </div>\n            </Menu.Item>\n          ) : (\n            <div />\n          )}\n          <Menu.Item>\n            {loggedIn ? (\n              <Button\n                inverted\n                icon\n                color='red'\n                onClick={() => {\n                  setUser({\n                    name: '',\n                    username: '',\n                    avatar: '',\n                    email: '',\n                    token: '',\n                    loggedIn: false\n                  })\n                  window.localStorage.removeItem('loggedUser')\n                  history.push('/signed-out')\n                  window.location.reload()\n                }}\n              >\n                Log out <Icon name='sign-out' />\n              </Button>\n            ) : (\n              <Button inverted icon color='green' as={NavLink} to='/login'>\n                Log In <Icon name='sign in' />\n              </Button>\n            )}\n          </Menu.Item>\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default TopMenu\n","import 'fomantic-ui-css/semantic.css'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { Container } from 'semantic-ui-react'\nimport useReactRouter from 'use-react-router'\nimport MainContent from './components/MainContent'\nimport SideBar from './components/SideBar'\nimport TopMenu from './components/TopMenu'\nimport { UserContext } from './context/userContext'\nimport loginService from './services/loginService'\nimport './styles/basic_labels.css'\nimport logo from './styles/logo.svg'\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<IUser>({\n    name: '',\n    username: '',\n    avatar: '',\n    email: '',\n    token: '',\n    loggedIn: false\n  })\n  const value = useMemo(() => ({ user, setUser }), [user, setUser])\n  const [isMobile, setIsMobile] = useState(false)\n  const { location } = useReactRouter()\n\n  function updateDimensions() {\n    if (window.innerWidth <= 900) {\n      setIsMobile(true)\n    } else setIsMobile(false)\n  }\n\n  let redirectURL = location.pathname\n\n  useEffect(() => {\n    const verifyUser = async () => {\n      const loggedUserToken = window.localStorage.getItem('loggedUser')\n      if (loggedUserToken) {\n        const user = await loginService.verify(loggedUserToken)\n        user.token = loggedUserToken\n        user.loggedIn = true\n        setUser(user)\n      }\n    }\n\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent\n      )\n    ) {\n      setIsMobile(true)\n      document.body.style.zoom = '80%'\n    }\n\n    verifyUser()\n    window.addEventListener('resize', updateDimensions)\n  }, [])\n\n  return (\n    <div>\n      <UserContext.Provider value={value}>\n        <TopMenu logo={logo} />\n        <SideBar isMobile={isMobile} />\n        <Container textAlign='left' fluid>\n          <style>\n            {`\n      html, body {\n        background-color: #1C1C1E !important;\n      }`}\n          </style>\n          <MainContent isMobile={isMobile} redirectURL={redirectURL} />\n        </Container>\n      </UserContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}